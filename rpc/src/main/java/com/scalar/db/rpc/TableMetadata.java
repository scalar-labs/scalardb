// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scalardb.proto

package com.scalar.db.rpc;

/**
 * Protobuf type {@code rpc.TableMetadata}
 */
public final class TableMetadata extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:rpc.TableMetadata)
    TableMetadataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TableMetadata.newBuilder() to construct.
  private TableMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TableMetadata() {
    partitionKeyName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    clusteringKeyName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    secondaryIndexName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TableMetadata();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TableMetadata(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              column_ = com.google.protobuf.MapField.newMapField(
                  ColumnDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
            column__ = input.readMessage(
                ColumnDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            column_.getMutableMap().put(
                column__.getKey(), column__.getValue());
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              partitionKeyName_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            partitionKeyName_.add(s);
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              clusteringKeyName_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000004;
            }
            clusteringKeyName_.add(s);
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              clusteringOrder_ = com.google.protobuf.MapField.newMapField(
                  ClusteringOrderDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
            clusteringOrder__ = input.readMessage(
                ClusteringOrderDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            clusteringOrder_.getMutableMap().put(
                clusteringOrder__.getKey(), clusteringOrder__.getValue());
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              secondaryIndexName_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000010;
            }
            secondaryIndexName_.add(s);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        partitionKeyName_ = partitionKeyName_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        clusteringKeyName_ = clusteringKeyName_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        secondaryIndexName_ = secondaryIndexName_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_TableMetadata_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetColumn();
      case 4:
        return internalGetClusteringOrder();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_TableMetadata_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.scalar.db.rpc.TableMetadata.class, com.scalar.db.rpc.TableMetadata.Builder.class);
  }

  public static final int COLUMN_FIELD_NUMBER = 1;
  private static final class ColumnDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_TableMetadata_ColumnEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.ENUM,
                com.scalar.db.rpc.DataType.DATA_TYPE_BOOLEAN.getNumber());
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Integer> column_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
  internalGetColumn() {
    if (column_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ColumnDefaultEntryHolder.defaultEntry);
    }
    return column_;
  }
  private static final
  com.google.protobuf.Internal.MapAdapter.Converter<
      java.lang.Integer, com.scalar.db.rpc.DataType> columnValueConverter =
          com.google.protobuf.Internal.MapAdapter.newEnumConverter(
              com.scalar.db.rpc.DataType.internalGetValueMap(),
              com.scalar.db.rpc.DataType.UNRECOGNIZED);
  private static final java.util.Map<java.lang.String, com.scalar.db.rpc.DataType>
  internalGetAdaptedColumnMap(
      java.util.Map<java.lang.String, java.lang.Integer> map) {
    return new com.google.protobuf.Internal.MapAdapter<
        java.lang.String, com.scalar.db.rpc.DataType, java.lang.Integer>(
            map, columnValueConverter);
  }

  public int getColumnCount() {
    return internalGetColumn().getMap().size();
  }
  /**
   * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
   */

  @java.lang.Override
  public boolean containsColumn(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetColumn().getMap().containsKey(key);
  }
  /**
   * Use {@link #getColumnMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.scalar.db.rpc.DataType>
  getColumn() {
    return getColumnMap();
  }
  /**
   * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, com.scalar.db.rpc.DataType>
  getColumnMap() {
    return internalGetAdaptedColumnMap(
        internalGetColumn().getMap());}
  /**
   * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
   */
  @java.lang.Override

  public com.scalar.db.rpc.DataType getColumnOrDefault(
      java.lang.String key,
      com.scalar.db.rpc.DataType defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetColumn().getMap();
    return map.containsKey(key)
           ? columnValueConverter.doForward(map.get(key))
           : defaultValue;
  }
  /**
   * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
   */
  @java.lang.Override

  public com.scalar.db.rpc.DataType getColumnOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetColumn().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return columnValueConverter.doForward(map.get(key));
  }
  /**
   * Use {@link #getColumnValueMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer>
  getColumnValue() {
    return getColumnValueMap();
  }
  /**
   * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.Integer>
  getColumnValueMap() {
    return internalGetColumn().getMap();
  }
  /**
   * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
   */
  @java.lang.Override

  public int getColumnValueOrDefault(
      java.lang.String key,
      int defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetColumn().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
   */
  @java.lang.Override

  public int getColumnValueOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetColumn().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int PARTITION_KEY_NAME_FIELD_NUMBER = 2;
  private com.google.protobuf.LazyStringList partitionKeyName_;
  /**
   * <code>repeated string partition_key_name = 2;</code>
   * @return A list containing the partitionKeyName.
   */
  public com.google.protobuf.ProtocolStringList
      getPartitionKeyNameList() {
    return partitionKeyName_;
  }
  /**
   * <code>repeated string partition_key_name = 2;</code>
   * @return The count of partitionKeyName.
   */
  public int getPartitionKeyNameCount() {
    return partitionKeyName_.size();
  }
  /**
   * <code>repeated string partition_key_name = 2;</code>
   * @param index The index of the element to return.
   * @return The partitionKeyName at the given index.
   */
  public java.lang.String getPartitionKeyName(int index) {
    return partitionKeyName_.get(index);
  }
  /**
   * <code>repeated string partition_key_name = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the partitionKeyName at the given index.
   */
  public com.google.protobuf.ByteString
      getPartitionKeyNameBytes(int index) {
    return partitionKeyName_.getByteString(index);
  }

  public static final int CLUSTERING_KEY_NAME_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList clusteringKeyName_;
  /**
   * <code>repeated string clustering_key_name = 3;</code>
   * @return A list containing the clusteringKeyName.
   */
  public com.google.protobuf.ProtocolStringList
      getClusteringKeyNameList() {
    return clusteringKeyName_;
  }
  /**
   * <code>repeated string clustering_key_name = 3;</code>
   * @return The count of clusteringKeyName.
   */
  public int getClusteringKeyNameCount() {
    return clusteringKeyName_.size();
  }
  /**
   * <code>repeated string clustering_key_name = 3;</code>
   * @param index The index of the element to return.
   * @return The clusteringKeyName at the given index.
   */
  public java.lang.String getClusteringKeyName(int index) {
    return clusteringKeyName_.get(index);
  }
  /**
   * <code>repeated string clustering_key_name = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the clusteringKeyName at the given index.
   */
  public com.google.protobuf.ByteString
      getClusteringKeyNameBytes(int index) {
    return clusteringKeyName_.getByteString(index);
  }

  public static final int CLUSTERING_ORDER_FIELD_NUMBER = 4;
  private static final class ClusteringOrderDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_TableMetadata_ClusteringOrderEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.ENUM,
                com.scalar.db.rpc.Order.ORDER_ASC.getNumber());
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Integer> clusteringOrder_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
  internalGetClusteringOrder() {
    if (clusteringOrder_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ClusteringOrderDefaultEntryHolder.defaultEntry);
    }
    return clusteringOrder_;
  }
  private static final
  com.google.protobuf.Internal.MapAdapter.Converter<
      java.lang.Integer, com.scalar.db.rpc.Order> clusteringOrderValueConverter =
          com.google.protobuf.Internal.MapAdapter.newEnumConverter(
              com.scalar.db.rpc.Order.internalGetValueMap(),
              com.scalar.db.rpc.Order.UNRECOGNIZED);
  private static final java.util.Map<java.lang.String, com.scalar.db.rpc.Order>
  internalGetAdaptedClusteringOrderMap(
      java.util.Map<java.lang.String, java.lang.Integer> map) {
    return new com.google.protobuf.Internal.MapAdapter<
        java.lang.String, com.scalar.db.rpc.Order, java.lang.Integer>(
            map, clusteringOrderValueConverter);
  }

  public int getClusteringOrderCount() {
    return internalGetClusteringOrder().getMap().size();
  }
  /**
   * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
   */

  @java.lang.Override
  public boolean containsClusteringOrder(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetClusteringOrder().getMap().containsKey(key);
  }
  /**
   * Use {@link #getClusteringOrderMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.scalar.db.rpc.Order>
  getClusteringOrder() {
    return getClusteringOrderMap();
  }
  /**
   * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, com.scalar.db.rpc.Order>
  getClusteringOrderMap() {
    return internalGetAdaptedClusteringOrderMap(
        internalGetClusteringOrder().getMap());}
  /**
   * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
   */
  @java.lang.Override

  public com.scalar.db.rpc.Order getClusteringOrderOrDefault(
      java.lang.String key,
      com.scalar.db.rpc.Order defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetClusteringOrder().getMap();
    return map.containsKey(key)
           ? clusteringOrderValueConverter.doForward(map.get(key))
           : defaultValue;
  }
  /**
   * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
   */
  @java.lang.Override

  public com.scalar.db.rpc.Order getClusteringOrderOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetClusteringOrder().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return clusteringOrderValueConverter.doForward(map.get(key));
  }
  /**
   * Use {@link #getClusteringOrderValueMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer>
  getClusteringOrderValue() {
    return getClusteringOrderValueMap();
  }
  /**
   * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.Integer>
  getClusteringOrderValueMap() {
    return internalGetClusteringOrder().getMap();
  }
  /**
   * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
   */
  @java.lang.Override

  public int getClusteringOrderValueOrDefault(
      java.lang.String key,
      int defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetClusteringOrder().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
   */
  @java.lang.Override

  public int getClusteringOrderValueOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetClusteringOrder().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int SECONDARY_INDEX_NAME_FIELD_NUMBER = 5;
  private com.google.protobuf.LazyStringList secondaryIndexName_;
  /**
   * <code>repeated string secondary_index_name = 5;</code>
   * @return A list containing the secondaryIndexName.
   */
  public com.google.protobuf.ProtocolStringList
      getSecondaryIndexNameList() {
    return secondaryIndexName_;
  }
  /**
   * <code>repeated string secondary_index_name = 5;</code>
   * @return The count of secondaryIndexName.
   */
  public int getSecondaryIndexNameCount() {
    return secondaryIndexName_.size();
  }
  /**
   * <code>repeated string secondary_index_name = 5;</code>
   * @param index The index of the element to return.
   * @return The secondaryIndexName at the given index.
   */
  public java.lang.String getSecondaryIndexName(int index) {
    return secondaryIndexName_.get(index);
  }
  /**
   * <code>repeated string secondary_index_name = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the secondaryIndexName at the given index.
   */
  public com.google.protobuf.ByteString
      getSecondaryIndexNameBytes(int index) {
    return secondaryIndexName_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetColumn(),
        ColumnDefaultEntryHolder.defaultEntry,
        1);
    for (int i = 0; i < partitionKeyName_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, partitionKeyName_.getRaw(i));
    }
    for (int i = 0; i < clusteringKeyName_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, clusteringKeyName_.getRaw(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetClusteringOrder(),
        ClusteringOrderDefaultEntryHolder.defaultEntry,
        4);
    for (int i = 0; i < secondaryIndexName_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, secondaryIndexName_.getRaw(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetColumn().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      column__ = ColumnDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, column__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < partitionKeyName_.size(); i++) {
        dataSize += computeStringSizeNoTag(partitionKeyName_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getPartitionKeyNameList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < clusteringKeyName_.size(); i++) {
        dataSize += computeStringSizeNoTag(clusteringKeyName_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getClusteringKeyNameList().size();
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetClusteringOrder().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      clusteringOrder__ = ClusteringOrderDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, clusteringOrder__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < secondaryIndexName_.size(); i++) {
        dataSize += computeStringSizeNoTag(secondaryIndexName_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getSecondaryIndexNameList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.scalar.db.rpc.TableMetadata)) {
      return super.equals(obj);
    }
    com.scalar.db.rpc.TableMetadata other = (com.scalar.db.rpc.TableMetadata) obj;

    if (!internalGetColumn().equals(
        other.internalGetColumn())) return false;
    if (!getPartitionKeyNameList()
        .equals(other.getPartitionKeyNameList())) return false;
    if (!getClusteringKeyNameList()
        .equals(other.getClusteringKeyNameList())) return false;
    if (!internalGetClusteringOrder().equals(
        other.internalGetClusteringOrder())) return false;
    if (!getSecondaryIndexNameList()
        .equals(other.getSecondaryIndexNameList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetColumn().getMap().isEmpty()) {
      hash = (37 * hash) + COLUMN_FIELD_NUMBER;
      hash = (53 * hash) + internalGetColumn().hashCode();
    }
    if (getPartitionKeyNameCount() > 0) {
      hash = (37 * hash) + PARTITION_KEY_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getPartitionKeyNameList().hashCode();
    }
    if (getClusteringKeyNameCount() > 0) {
      hash = (37 * hash) + CLUSTERING_KEY_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getClusteringKeyNameList().hashCode();
    }
    if (!internalGetClusteringOrder().getMap().isEmpty()) {
      hash = (37 * hash) + CLUSTERING_ORDER_FIELD_NUMBER;
      hash = (53 * hash) + internalGetClusteringOrder().hashCode();
    }
    if (getSecondaryIndexNameCount() > 0) {
      hash = (37 * hash) + SECONDARY_INDEX_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getSecondaryIndexNameList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.scalar.db.rpc.TableMetadata parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.scalar.db.rpc.TableMetadata parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.scalar.db.rpc.TableMetadata parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.scalar.db.rpc.TableMetadata parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.scalar.db.rpc.TableMetadata parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.scalar.db.rpc.TableMetadata parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.scalar.db.rpc.TableMetadata parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.scalar.db.rpc.TableMetadata parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.scalar.db.rpc.TableMetadata parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.scalar.db.rpc.TableMetadata parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.scalar.db.rpc.TableMetadata parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.scalar.db.rpc.TableMetadata parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.scalar.db.rpc.TableMetadata prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code rpc.TableMetadata}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:rpc.TableMetadata)
      com.scalar.db.rpc.TableMetadataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_TableMetadata_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetColumn();
        case 4:
          return internalGetClusteringOrder();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableColumn();
        case 4:
          return internalGetMutableClusteringOrder();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_TableMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.scalar.db.rpc.TableMetadata.class, com.scalar.db.rpc.TableMetadata.Builder.class);
    }

    // Construct using com.scalar.db.rpc.TableMetadata.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      internalGetMutableColumn().clear();
      partitionKeyName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      clusteringKeyName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      internalGetMutableClusteringOrder().clear();
      secondaryIndexName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_TableMetadata_descriptor;
    }

    @java.lang.Override
    public com.scalar.db.rpc.TableMetadata getDefaultInstanceForType() {
      return com.scalar.db.rpc.TableMetadata.getDefaultInstance();
    }

    @java.lang.Override
    public com.scalar.db.rpc.TableMetadata build() {
      com.scalar.db.rpc.TableMetadata result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.scalar.db.rpc.TableMetadata buildPartial() {
      com.scalar.db.rpc.TableMetadata result = new com.scalar.db.rpc.TableMetadata(this);
      int from_bitField0_ = bitField0_;
      result.column_ = internalGetColumn();
      result.column_.makeImmutable();
      if (((bitField0_ & 0x00000002) != 0)) {
        partitionKeyName_ = partitionKeyName_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.partitionKeyName_ = partitionKeyName_;
      if (((bitField0_ & 0x00000004) != 0)) {
        clusteringKeyName_ = clusteringKeyName_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.clusteringKeyName_ = clusteringKeyName_;
      result.clusteringOrder_ = internalGetClusteringOrder();
      result.clusteringOrder_.makeImmutable();
      if (((bitField0_ & 0x00000010) != 0)) {
        secondaryIndexName_ = secondaryIndexName_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.secondaryIndexName_ = secondaryIndexName_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.scalar.db.rpc.TableMetadata) {
        return mergeFrom((com.scalar.db.rpc.TableMetadata)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.scalar.db.rpc.TableMetadata other) {
      if (other == com.scalar.db.rpc.TableMetadata.getDefaultInstance()) return this;
      internalGetMutableColumn().mergeFrom(
          other.internalGetColumn());
      if (!other.partitionKeyName_.isEmpty()) {
        if (partitionKeyName_.isEmpty()) {
          partitionKeyName_ = other.partitionKeyName_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensurePartitionKeyNameIsMutable();
          partitionKeyName_.addAll(other.partitionKeyName_);
        }
        onChanged();
      }
      if (!other.clusteringKeyName_.isEmpty()) {
        if (clusteringKeyName_.isEmpty()) {
          clusteringKeyName_ = other.clusteringKeyName_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureClusteringKeyNameIsMutable();
          clusteringKeyName_.addAll(other.clusteringKeyName_);
        }
        onChanged();
      }
      internalGetMutableClusteringOrder().mergeFrom(
          other.internalGetClusteringOrder());
      if (!other.secondaryIndexName_.isEmpty()) {
        if (secondaryIndexName_.isEmpty()) {
          secondaryIndexName_ = other.secondaryIndexName_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureSecondaryIndexNameIsMutable();
          secondaryIndexName_.addAll(other.secondaryIndexName_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.scalar.db.rpc.TableMetadata parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.scalar.db.rpc.TableMetadata) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> column_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetColumn() {
      if (column_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ColumnDefaultEntryHolder.defaultEntry);
      }
      return column_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetMutableColumn() {
      onChanged();;
      if (column_ == null) {
        column_ = com.google.protobuf.MapField.newMapField(
            ColumnDefaultEntryHolder.defaultEntry);
      }
      if (!column_.isMutable()) {
        column_ = column_.copy();
      }
      return column_;
    }

    public int getColumnCount() {
      return internalGetColumn().getMap().size();
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */

    @java.lang.Override
    public boolean containsColumn(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetColumn().getMap().containsKey(key);
    }
    /**
     * Use {@link #getColumnMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.scalar.db.rpc.DataType>
    getColumn() {
      return getColumnMap();
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.scalar.db.rpc.DataType>
    getColumnMap() {
      return internalGetAdaptedColumnMap(
          internalGetColumn().getMap());}
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */
    @java.lang.Override

    public com.scalar.db.rpc.DataType getColumnOrDefault(
        java.lang.String key,
        com.scalar.db.rpc.DataType defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetColumn().getMap();
      return map.containsKey(key)
             ? columnValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */
    @java.lang.Override

    public com.scalar.db.rpc.DataType getColumnOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetColumn().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return columnValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getColumnValueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getColumnValue() {
      return getColumnValueMap();
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer>
    getColumnValueMap() {
      return internalGetColumn().getMap();
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */
    @java.lang.Override

    public int getColumnValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetColumn().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */
    @java.lang.Override

    public int getColumnValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetColumn().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearColumn() {
      internalGetMutableColumn().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */

    public Builder removeColumn(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableColumn().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.scalar.db.rpc.DataType>
    getMutableColumn() {
      return internalGetAdaptedColumnMap(
           internalGetMutableColumn().getMutableMap());
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */
    public Builder putColumn(
        java.lang.String key,
        com.scalar.db.rpc.DataType value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableColumn().getMutableMap()
          .put(key, columnValueConverter.doBackward(value));
      return this;
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */
    public Builder putAllColumn(
        java.util.Map<java.lang.String, com.scalar.db.rpc.DataType> values) {
      internalGetAdaptedColumnMap(
          internalGetMutableColumn().getMutableMap())
              .putAll(values);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getMutableColumnValue() {
      return internalGetMutableColumn().getMutableMap();
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */
    public Builder putColumnValue(
        java.lang.String key,
        int value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableColumn().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .rpc.DataType&gt; column = 1;</code>
     */
    public Builder putAllColumnValue(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      internalGetMutableColumn().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.LazyStringList partitionKeyName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensurePartitionKeyNameIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        partitionKeyName_ = new com.google.protobuf.LazyStringArrayList(partitionKeyName_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated string partition_key_name = 2;</code>
     * @return A list containing the partitionKeyName.
     */
    public com.google.protobuf.ProtocolStringList
        getPartitionKeyNameList() {
      return partitionKeyName_.getUnmodifiableView();
    }
    /**
     * <code>repeated string partition_key_name = 2;</code>
     * @return The count of partitionKeyName.
     */
    public int getPartitionKeyNameCount() {
      return partitionKeyName_.size();
    }
    /**
     * <code>repeated string partition_key_name = 2;</code>
     * @param index The index of the element to return.
     * @return The partitionKeyName at the given index.
     */
    public java.lang.String getPartitionKeyName(int index) {
      return partitionKeyName_.get(index);
    }
    /**
     * <code>repeated string partition_key_name = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the partitionKeyName at the given index.
     */
    public com.google.protobuf.ByteString
        getPartitionKeyNameBytes(int index) {
      return partitionKeyName_.getByteString(index);
    }
    /**
     * <code>repeated string partition_key_name = 2;</code>
     * @param index The index to set the value at.
     * @param value The partitionKeyName to set.
     * @return This builder for chaining.
     */
    public Builder setPartitionKeyName(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePartitionKeyNameIsMutable();
      partitionKeyName_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string partition_key_name = 2;</code>
     * @param value The partitionKeyName to add.
     * @return This builder for chaining.
     */
    public Builder addPartitionKeyName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePartitionKeyNameIsMutable();
      partitionKeyName_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string partition_key_name = 2;</code>
     * @param values The partitionKeyName to add.
     * @return This builder for chaining.
     */
    public Builder addAllPartitionKeyName(
        java.lang.Iterable<java.lang.String> values) {
      ensurePartitionKeyNameIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, partitionKeyName_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string partition_key_name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPartitionKeyName() {
      partitionKeyName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string partition_key_name = 2;</code>
     * @param value The bytes of the partitionKeyName to add.
     * @return This builder for chaining.
     */
    public Builder addPartitionKeyNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensurePartitionKeyNameIsMutable();
      partitionKeyName_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList clusteringKeyName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureClusteringKeyNameIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        clusteringKeyName_ = new com.google.protobuf.LazyStringArrayList(clusteringKeyName_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated string clustering_key_name = 3;</code>
     * @return A list containing the clusteringKeyName.
     */
    public com.google.protobuf.ProtocolStringList
        getClusteringKeyNameList() {
      return clusteringKeyName_.getUnmodifiableView();
    }
    /**
     * <code>repeated string clustering_key_name = 3;</code>
     * @return The count of clusteringKeyName.
     */
    public int getClusteringKeyNameCount() {
      return clusteringKeyName_.size();
    }
    /**
     * <code>repeated string clustering_key_name = 3;</code>
     * @param index The index of the element to return.
     * @return The clusteringKeyName at the given index.
     */
    public java.lang.String getClusteringKeyName(int index) {
      return clusteringKeyName_.get(index);
    }
    /**
     * <code>repeated string clustering_key_name = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the clusteringKeyName at the given index.
     */
    public com.google.protobuf.ByteString
        getClusteringKeyNameBytes(int index) {
      return clusteringKeyName_.getByteString(index);
    }
    /**
     * <code>repeated string clustering_key_name = 3;</code>
     * @param index The index to set the value at.
     * @param value The clusteringKeyName to set.
     * @return This builder for chaining.
     */
    public Builder setClusteringKeyName(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureClusteringKeyNameIsMutable();
      clusteringKeyName_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string clustering_key_name = 3;</code>
     * @param value The clusteringKeyName to add.
     * @return This builder for chaining.
     */
    public Builder addClusteringKeyName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureClusteringKeyNameIsMutable();
      clusteringKeyName_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string clustering_key_name = 3;</code>
     * @param values The clusteringKeyName to add.
     * @return This builder for chaining.
     */
    public Builder addAllClusteringKeyName(
        java.lang.Iterable<java.lang.String> values) {
      ensureClusteringKeyNameIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, clusteringKeyName_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string clustering_key_name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearClusteringKeyName() {
      clusteringKeyName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string clustering_key_name = 3;</code>
     * @param value The bytes of the clusteringKeyName to add.
     * @return This builder for chaining.
     */
    public Builder addClusteringKeyNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureClusteringKeyNameIsMutable();
      clusteringKeyName_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> clusteringOrder_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetClusteringOrder() {
      if (clusteringOrder_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ClusteringOrderDefaultEntryHolder.defaultEntry);
      }
      return clusteringOrder_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetMutableClusteringOrder() {
      onChanged();;
      if (clusteringOrder_ == null) {
        clusteringOrder_ = com.google.protobuf.MapField.newMapField(
            ClusteringOrderDefaultEntryHolder.defaultEntry);
      }
      if (!clusteringOrder_.isMutable()) {
        clusteringOrder_ = clusteringOrder_.copy();
      }
      return clusteringOrder_;
    }

    public int getClusteringOrderCount() {
      return internalGetClusteringOrder().getMap().size();
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */

    @java.lang.Override
    public boolean containsClusteringOrder(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetClusteringOrder().getMap().containsKey(key);
    }
    /**
     * Use {@link #getClusteringOrderMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.scalar.db.rpc.Order>
    getClusteringOrder() {
      return getClusteringOrderMap();
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.scalar.db.rpc.Order>
    getClusteringOrderMap() {
      return internalGetAdaptedClusteringOrderMap(
          internalGetClusteringOrder().getMap());}
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */
    @java.lang.Override

    public com.scalar.db.rpc.Order getClusteringOrderOrDefault(
        java.lang.String key,
        com.scalar.db.rpc.Order defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetClusteringOrder().getMap();
      return map.containsKey(key)
             ? clusteringOrderValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */
    @java.lang.Override

    public com.scalar.db.rpc.Order getClusteringOrderOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetClusteringOrder().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return clusteringOrderValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getClusteringOrderValueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getClusteringOrderValue() {
      return getClusteringOrderValueMap();
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer>
    getClusteringOrderValueMap() {
      return internalGetClusteringOrder().getMap();
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */
    @java.lang.Override

    public int getClusteringOrderValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetClusteringOrder().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */
    @java.lang.Override

    public int getClusteringOrderValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetClusteringOrder().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearClusteringOrder() {
      internalGetMutableClusteringOrder().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */

    public Builder removeClusteringOrder(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableClusteringOrder().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.scalar.db.rpc.Order>
    getMutableClusteringOrder() {
      return internalGetAdaptedClusteringOrderMap(
           internalGetMutableClusteringOrder().getMutableMap());
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */
    public Builder putClusteringOrder(
        java.lang.String key,
        com.scalar.db.rpc.Order value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableClusteringOrder().getMutableMap()
          .put(key, clusteringOrderValueConverter.doBackward(value));
      return this;
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */
    public Builder putAllClusteringOrder(
        java.util.Map<java.lang.String, com.scalar.db.rpc.Order> values) {
      internalGetAdaptedClusteringOrderMap(
          internalGetMutableClusteringOrder().getMutableMap())
              .putAll(values);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getMutableClusteringOrderValue() {
      return internalGetMutableClusteringOrder().getMutableMap();
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */
    public Builder putClusteringOrderValue(
        java.lang.String key,
        int value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableClusteringOrder().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .rpc.Order&gt; clustering_order = 4;</code>
     */
    public Builder putAllClusteringOrderValue(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      internalGetMutableClusteringOrder().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.LazyStringList secondaryIndexName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureSecondaryIndexNameIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        secondaryIndexName_ = new com.google.protobuf.LazyStringArrayList(secondaryIndexName_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <code>repeated string secondary_index_name = 5;</code>
     * @return A list containing the secondaryIndexName.
     */
    public com.google.protobuf.ProtocolStringList
        getSecondaryIndexNameList() {
      return secondaryIndexName_.getUnmodifiableView();
    }
    /**
     * <code>repeated string secondary_index_name = 5;</code>
     * @return The count of secondaryIndexName.
     */
    public int getSecondaryIndexNameCount() {
      return secondaryIndexName_.size();
    }
    /**
     * <code>repeated string secondary_index_name = 5;</code>
     * @param index The index of the element to return.
     * @return The secondaryIndexName at the given index.
     */
    public java.lang.String getSecondaryIndexName(int index) {
      return secondaryIndexName_.get(index);
    }
    /**
     * <code>repeated string secondary_index_name = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the secondaryIndexName at the given index.
     */
    public com.google.protobuf.ByteString
        getSecondaryIndexNameBytes(int index) {
      return secondaryIndexName_.getByteString(index);
    }
    /**
     * <code>repeated string secondary_index_name = 5;</code>
     * @param index The index to set the value at.
     * @param value The secondaryIndexName to set.
     * @return This builder for chaining.
     */
    public Builder setSecondaryIndexName(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureSecondaryIndexNameIsMutable();
      secondaryIndexName_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string secondary_index_name = 5;</code>
     * @param value The secondaryIndexName to add.
     * @return This builder for chaining.
     */
    public Builder addSecondaryIndexName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureSecondaryIndexNameIsMutable();
      secondaryIndexName_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string secondary_index_name = 5;</code>
     * @param values The secondaryIndexName to add.
     * @return This builder for chaining.
     */
    public Builder addAllSecondaryIndexName(
        java.lang.Iterable<java.lang.String> values) {
      ensureSecondaryIndexNameIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, secondaryIndexName_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string secondary_index_name = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearSecondaryIndexName() {
      secondaryIndexName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string secondary_index_name = 5;</code>
     * @param value The bytes of the secondaryIndexName to add.
     * @return This builder for chaining.
     */
    public Builder addSecondaryIndexNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureSecondaryIndexNameIsMutable();
      secondaryIndexName_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:rpc.TableMetadata)
  }

  // @@protoc_insertion_point(class_scope:rpc.TableMetadata)
  private static final com.scalar.db.rpc.TableMetadata DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.scalar.db.rpc.TableMetadata();
  }

  public static com.scalar.db.rpc.TableMetadata getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TableMetadata>
      PARSER = new com.google.protobuf.AbstractParser<TableMetadata>() {
    @java.lang.Override
    public TableMetadata parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TableMetadata(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TableMetadata> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TableMetadata> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.scalar.db.rpc.TableMetadata getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

