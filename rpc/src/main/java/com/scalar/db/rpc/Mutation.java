// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scalardb.proto

package com.scalar.db.rpc;

/**
 * Protobuf type {@code rpc.Mutation}
 */
public final class Mutation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:rpc.Mutation)
    MutationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Mutation.newBuilder() to construct.
  private Mutation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Mutation() {
    namespace_ = "";
    table_ = "";
    consistency_ = 0;
    type_ = 0;
    value_ = java.util.Collections.emptyList();
    columns_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Mutation();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_Mutation_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_Mutation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.scalar.db.rpc.Mutation.class, com.scalar.db.rpc.Mutation.Builder.class);
  }

  /**
   * Protobuf enum {@code rpc.Mutation.Type}
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PUT = 0;</code>
     */
    PUT(0),
    /**
     * <code>DELETE = 1;</code>
     */
    DELETE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PUT = 0;</code>
     */
    public static final int PUT_VALUE = 0;
    /**
     * <code>DELETE = 1;</code>
     */
    public static final int DELETE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Type forNumber(int value) {
      switch (value) {
        case 0: return PUT;
        case 1: return DELETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.scalar.db.rpc.Mutation.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:rpc.Mutation.Type)
  }

  public static final int NAMESPACE_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object namespace_ = "";
  /**
   * <code>string namespace = 1;</code>
   * @return The namespace.
   */
  @java.lang.Override
  public java.lang.String getNamespace() {
    java.lang.Object ref = namespace_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      namespace_ = s;
      return s;
    }
  }
  /**
   * <code>string namespace = 1;</code>
   * @return The bytes for namespace.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNamespaceBytes() {
    java.lang.Object ref = namespace_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      namespace_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TABLE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object table_ = "";
  /**
   * <code>string table = 2;</code>
   * @return The table.
   */
  @java.lang.Override
  public java.lang.String getTable() {
    java.lang.Object ref = table_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      table_ = s;
      return s;
    }
  }
  /**
   * <code>string table = 2;</code>
   * @return The bytes for table.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTableBytes() {
    java.lang.Object ref = table_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      table_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PARTITION_KEY_FIELD_NUMBER = 3;
  private com.scalar.db.rpc.Key partitionKey_;
  /**
   * <code>.rpc.Key partition_key = 3;</code>
   * @return Whether the partitionKey field is set.
   */
  @java.lang.Override
  public boolean hasPartitionKey() {
    return partitionKey_ != null;
  }
  /**
   * <code>.rpc.Key partition_key = 3;</code>
   * @return The partitionKey.
   */
  @java.lang.Override
  public com.scalar.db.rpc.Key getPartitionKey() {
    return partitionKey_ == null ? com.scalar.db.rpc.Key.getDefaultInstance() : partitionKey_;
  }
  /**
   * <code>.rpc.Key partition_key = 3;</code>
   */
  @java.lang.Override
  public com.scalar.db.rpc.KeyOrBuilder getPartitionKeyOrBuilder() {
    return partitionKey_ == null ? com.scalar.db.rpc.Key.getDefaultInstance() : partitionKey_;
  }

  public static final int CLUSTERING_KEY_FIELD_NUMBER = 4;
  private com.scalar.db.rpc.Key clusteringKey_;
  /**
   * <code>.rpc.Key clustering_key = 4;</code>
   * @return Whether the clusteringKey field is set.
   */
  @java.lang.Override
  public boolean hasClusteringKey() {
    return clusteringKey_ != null;
  }
  /**
   * <code>.rpc.Key clustering_key = 4;</code>
   * @return The clusteringKey.
   */
  @java.lang.Override
  public com.scalar.db.rpc.Key getClusteringKey() {
    return clusteringKey_ == null ? com.scalar.db.rpc.Key.getDefaultInstance() : clusteringKey_;
  }
  /**
   * <code>.rpc.Key clustering_key = 4;</code>
   */
  @java.lang.Override
  public com.scalar.db.rpc.KeyOrBuilder getClusteringKeyOrBuilder() {
    return clusteringKey_ == null ? com.scalar.db.rpc.Key.getDefaultInstance() : clusteringKey_;
  }

  public static final int CONSISTENCY_FIELD_NUMBER = 5;
  private int consistency_ = 0;
  /**
   * <code>.rpc.Consistency consistency = 5;</code>
   * @return The enum numeric value on the wire for consistency.
   */
  @java.lang.Override public int getConsistencyValue() {
    return consistency_;
  }
  /**
   * <code>.rpc.Consistency consistency = 5;</code>
   * @return The consistency.
   */
  @java.lang.Override public com.scalar.db.rpc.Consistency getConsistency() {
    com.scalar.db.rpc.Consistency result = com.scalar.db.rpc.Consistency.forNumber(consistency_);
    return result == null ? com.scalar.db.rpc.Consistency.UNRECOGNIZED : result;
  }

  public static final int CONDITION_FIELD_NUMBER = 6;
  private com.scalar.db.rpc.MutateCondition condition_;
  /**
   * <code>.rpc.MutateCondition condition = 6;</code>
   * @return Whether the condition field is set.
   */
  @java.lang.Override
  public boolean hasCondition() {
    return condition_ != null;
  }
  /**
   * <code>.rpc.MutateCondition condition = 6;</code>
   * @return The condition.
   */
  @java.lang.Override
  public com.scalar.db.rpc.MutateCondition getCondition() {
    return condition_ == null ? com.scalar.db.rpc.MutateCondition.getDefaultInstance() : condition_;
  }
  /**
   * <code>.rpc.MutateCondition condition = 6;</code>
   */
  @java.lang.Override
  public com.scalar.db.rpc.MutateConditionOrBuilder getConditionOrBuilder() {
    return condition_ == null ? com.scalar.db.rpc.MutateCondition.getDefaultInstance() : condition_;
  }

  public static final int TYPE_FIELD_NUMBER = 7;
  private int type_ = 0;
  /**
   * <code>.rpc.Mutation.Type type = 7;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.rpc.Mutation.Type type = 7;</code>
   * @return The type.
   */
  @java.lang.Override public com.scalar.db.rpc.Mutation.Type getType() {
    com.scalar.db.rpc.Mutation.Type result = com.scalar.db.rpc.Mutation.Type.forNumber(type_);
    return result == null ? com.scalar.db.rpc.Mutation.Type.UNRECOGNIZED : result;
  }

  public static final int VALUE_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private java.util.List<com.scalar.db.rpc.Value> value_;
  /**
   * <pre>
   * only for Put operations
   * </pre>
   *
   * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<com.scalar.db.rpc.Value> getValueList() {
    return value_;
  }
  /**
   * <pre>
   * only for Put operations
   * </pre>
   *
   * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<? extends com.scalar.db.rpc.ValueOrBuilder> 
      getValueOrBuilderList() {
    return value_;
  }
  /**
   * <pre>
   * only for Put operations
   * </pre>
   *
   * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public int getValueCount() {
    return value_.size();
  }
  /**
   * <pre>
   * only for Put operations
   * </pre>
   *
   * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.scalar.db.rpc.Value getValue(int index) {
    return value_.get(index);
  }
  /**
   * <pre>
   * only for Put operations
   * </pre>
   *
   * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.scalar.db.rpc.ValueOrBuilder getValueOrBuilder(
      int index) {
    return value_.get(index);
  }

  public static final int COLUMNS_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<com.scalar.db.rpc.Column> columns_;
  /**
   * <pre>
   * only for Put operations
   * </pre>
   *
   * <code>repeated .rpc.Column columns = 9;</code>
   */
  @java.lang.Override
  public java.util.List<com.scalar.db.rpc.Column> getColumnsList() {
    return columns_;
  }
  /**
   * <pre>
   * only for Put operations
   * </pre>
   *
   * <code>repeated .rpc.Column columns = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.scalar.db.rpc.ColumnOrBuilder> 
      getColumnsOrBuilderList() {
    return columns_;
  }
  /**
   * <pre>
   * only for Put operations
   * </pre>
   *
   * <code>repeated .rpc.Column columns = 9;</code>
   */
  @java.lang.Override
  public int getColumnsCount() {
    return columns_.size();
  }
  /**
   * <pre>
   * only for Put operations
   * </pre>
   *
   * <code>repeated .rpc.Column columns = 9;</code>
   */
  @java.lang.Override
  public com.scalar.db.rpc.Column getColumns(int index) {
    return columns_.get(index);
  }
  /**
   * <pre>
   * only for Put operations
   * </pre>
   *
   * <code>repeated .rpc.Column columns = 9;</code>
   */
  @java.lang.Override
  public com.scalar.db.rpc.ColumnOrBuilder getColumnsOrBuilder(
      int index) {
    return columns_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(namespace_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, namespace_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, table_);
    }
    if (partitionKey_ != null) {
      output.writeMessage(3, getPartitionKey());
    }
    if (clusteringKey_ != null) {
      output.writeMessage(4, getClusteringKey());
    }
    if (consistency_ != com.scalar.db.rpc.Consistency.CONSISTENCY_SEQUENTIAL.getNumber()) {
      output.writeEnum(5, consistency_);
    }
    if (condition_ != null) {
      output.writeMessage(6, getCondition());
    }
    if (type_ != com.scalar.db.rpc.Mutation.Type.PUT.getNumber()) {
      output.writeEnum(7, type_);
    }
    for (int i = 0; i < value_.size(); i++) {
      output.writeMessage(8, value_.get(i));
    }
    for (int i = 0; i < columns_.size(); i++) {
      output.writeMessage(9, columns_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(namespace_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, namespace_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, table_);
    }
    if (partitionKey_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPartitionKey());
    }
    if (clusteringKey_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getClusteringKey());
    }
    if (consistency_ != com.scalar.db.rpc.Consistency.CONSISTENCY_SEQUENTIAL.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, consistency_);
    }
    if (condition_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getCondition());
    }
    if (type_ != com.scalar.db.rpc.Mutation.Type.PUT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, type_);
    }
    for (int i = 0; i < value_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, value_.get(i));
    }
    for (int i = 0; i < columns_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, columns_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.scalar.db.rpc.Mutation)) {
      return super.equals(obj);
    }
    com.scalar.db.rpc.Mutation other = (com.scalar.db.rpc.Mutation) obj;

    if (!getNamespace()
        .equals(other.getNamespace())) return false;
    if (!getTable()
        .equals(other.getTable())) return false;
    if (hasPartitionKey() != other.hasPartitionKey()) return false;
    if (hasPartitionKey()) {
      if (!getPartitionKey()
          .equals(other.getPartitionKey())) return false;
    }
    if (hasClusteringKey() != other.hasClusteringKey()) return false;
    if (hasClusteringKey()) {
      if (!getClusteringKey()
          .equals(other.getClusteringKey())) return false;
    }
    if (consistency_ != other.consistency_) return false;
    if (hasCondition() != other.hasCondition()) return false;
    if (hasCondition()) {
      if (!getCondition()
          .equals(other.getCondition())) return false;
    }
    if (type_ != other.type_) return false;
    if (!getValueList()
        .equals(other.getValueList())) return false;
    if (!getColumnsList()
        .equals(other.getColumnsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
    hash = (53 * hash) + getNamespace().hashCode();
    hash = (37 * hash) + TABLE_FIELD_NUMBER;
    hash = (53 * hash) + getTable().hashCode();
    if (hasPartitionKey()) {
      hash = (37 * hash) + PARTITION_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPartitionKey().hashCode();
    }
    if (hasClusteringKey()) {
      hash = (37 * hash) + CLUSTERING_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getClusteringKey().hashCode();
    }
    hash = (37 * hash) + CONSISTENCY_FIELD_NUMBER;
    hash = (53 * hash) + consistency_;
    if (hasCondition()) {
      hash = (37 * hash) + CONDITION_FIELD_NUMBER;
      hash = (53 * hash) + getCondition().hashCode();
    }
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    if (getValueCount() > 0) {
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValueList().hashCode();
    }
    if (getColumnsCount() > 0) {
      hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getColumnsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.scalar.db.rpc.Mutation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.scalar.db.rpc.Mutation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.scalar.db.rpc.Mutation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.scalar.db.rpc.Mutation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.scalar.db.rpc.Mutation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.scalar.db.rpc.Mutation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.scalar.db.rpc.Mutation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.scalar.db.rpc.Mutation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.scalar.db.rpc.Mutation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.scalar.db.rpc.Mutation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.scalar.db.rpc.Mutation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.scalar.db.rpc.Mutation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.scalar.db.rpc.Mutation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code rpc.Mutation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:rpc.Mutation)
      com.scalar.db.rpc.MutationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_Mutation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_Mutation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.scalar.db.rpc.Mutation.class, com.scalar.db.rpc.Mutation.Builder.class);
    }

    // Construct using com.scalar.db.rpc.Mutation.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      namespace_ = "";
      table_ = "";
      partitionKey_ = null;
      if (partitionKeyBuilder_ != null) {
        partitionKeyBuilder_.dispose();
        partitionKeyBuilder_ = null;
      }
      clusteringKey_ = null;
      if (clusteringKeyBuilder_ != null) {
        clusteringKeyBuilder_.dispose();
        clusteringKeyBuilder_ = null;
      }
      consistency_ = 0;
      condition_ = null;
      if (conditionBuilder_ != null) {
        conditionBuilder_.dispose();
        conditionBuilder_ = null;
      }
      type_ = 0;
      if (valueBuilder_ == null) {
        value_ = java.util.Collections.emptyList();
      } else {
        value_ = null;
        valueBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      if (columnsBuilder_ == null) {
        columns_ = java.util.Collections.emptyList();
      } else {
        columns_ = null;
        columnsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.scalar.db.rpc.ScalarDbProto.internal_static_rpc_Mutation_descriptor;
    }

    @java.lang.Override
    public com.scalar.db.rpc.Mutation getDefaultInstanceForType() {
      return com.scalar.db.rpc.Mutation.getDefaultInstance();
    }

    @java.lang.Override
    public com.scalar.db.rpc.Mutation build() {
      com.scalar.db.rpc.Mutation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.scalar.db.rpc.Mutation buildPartial() {
      com.scalar.db.rpc.Mutation result = new com.scalar.db.rpc.Mutation(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.scalar.db.rpc.Mutation result) {
      if (valueBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.value_ = value_;
      } else {
        result.value_ = valueBuilder_.build();
      }
      if (columnsBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          columns_ = java.util.Collections.unmodifiableList(columns_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.columns_ = columns_;
      } else {
        result.columns_ = columnsBuilder_.build();
      }
    }

    private void buildPartial0(com.scalar.db.rpc.Mutation result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.namespace_ = namespace_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.table_ = table_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.partitionKey_ = partitionKeyBuilder_ == null
            ? partitionKey_
            : partitionKeyBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.clusteringKey_ = clusteringKeyBuilder_ == null
            ? clusteringKey_
            : clusteringKeyBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.consistency_ = consistency_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.condition_ = conditionBuilder_ == null
            ? condition_
            : conditionBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.type_ = type_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.scalar.db.rpc.Mutation) {
        return mergeFrom((com.scalar.db.rpc.Mutation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.scalar.db.rpc.Mutation other) {
      if (other == com.scalar.db.rpc.Mutation.getDefaultInstance()) return this;
      if (!other.getNamespace().isEmpty()) {
        namespace_ = other.namespace_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getTable().isEmpty()) {
        table_ = other.table_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasPartitionKey()) {
        mergePartitionKey(other.getPartitionKey());
      }
      if (other.hasClusteringKey()) {
        mergeClusteringKey(other.getClusteringKey());
      }
      if (other.consistency_ != 0) {
        setConsistencyValue(other.getConsistencyValue());
      }
      if (other.hasCondition()) {
        mergeCondition(other.getCondition());
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (valueBuilder_ == null) {
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
      } else {
        if (!other.value_.isEmpty()) {
          if (valueBuilder_.isEmpty()) {
            valueBuilder_.dispose();
            valueBuilder_ = null;
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000080);
            valueBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getValueFieldBuilder() : null;
          } else {
            valueBuilder_.addAllMessages(other.value_);
          }
        }
      }
      if (columnsBuilder_ == null) {
        if (!other.columns_.isEmpty()) {
          if (columns_.isEmpty()) {
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureColumnsIsMutable();
            columns_.addAll(other.columns_);
          }
          onChanged();
        }
      } else {
        if (!other.columns_.isEmpty()) {
          if (columnsBuilder_.isEmpty()) {
            columnsBuilder_.dispose();
            columnsBuilder_ = null;
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000100);
            columnsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getColumnsFieldBuilder() : null;
          } else {
            columnsBuilder_.addAllMessages(other.columns_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              namespace_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              table_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getPartitionKeyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getClusteringKeyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              consistency_ = input.readEnum();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              input.readMessage(
                  getConditionFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              type_ = input.readEnum();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 66: {
              com.scalar.db.rpc.Value m =
                  input.readMessage(
                      com.scalar.db.rpc.Value.parser(),
                      extensionRegistry);
              if (valueBuilder_ == null) {
                ensureValueIsMutable();
                value_.add(m);
              } else {
                valueBuilder_.addMessage(m);
              }
              break;
            } // case 66
            case 74: {
              com.scalar.db.rpc.Column m =
                  input.readMessage(
                      com.scalar.db.rpc.Column.parser(),
                      extensionRegistry);
              if (columnsBuilder_ == null) {
                ensureColumnsIsMutable();
                columns_.add(m);
              } else {
                columnsBuilder_.addMessage(m);
              }
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object namespace_ = "";
    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namespace_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string namespace = 1;</code>
     * @param value The namespace to set.
     * @return This builder for chaining.
     */
    public Builder setNamespace(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      namespace_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string namespace = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearNamespace() {
      namespace_ = getDefaultInstance().getNamespace();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string namespace = 1;</code>
     * @param value The bytes for namespace to set.
     * @return This builder for chaining.
     */
    public Builder setNamespaceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      namespace_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object table_ = "";
    /**
     * <code>string table = 2;</code>
     * @return The table.
     */
    public java.lang.String getTable() {
      java.lang.Object ref = table_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        table_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string table = 2;</code>
     * @return The bytes for table.
     */
    public com.google.protobuf.ByteString
        getTableBytes() {
      java.lang.Object ref = table_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        table_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string table = 2;</code>
     * @param value The table to set.
     * @return This builder for chaining.
     */
    public Builder setTable(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      table_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string table = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTable() {
      table_ = getDefaultInstance().getTable();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string table = 2;</code>
     * @param value The bytes for table to set.
     * @return This builder for chaining.
     */
    public Builder setTableBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      table_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.scalar.db.rpc.Key partitionKey_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.scalar.db.rpc.Key, com.scalar.db.rpc.Key.Builder, com.scalar.db.rpc.KeyOrBuilder> partitionKeyBuilder_;
    /**
     * <code>.rpc.Key partition_key = 3;</code>
     * @return Whether the partitionKey field is set.
     */
    public boolean hasPartitionKey() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.rpc.Key partition_key = 3;</code>
     * @return The partitionKey.
     */
    public com.scalar.db.rpc.Key getPartitionKey() {
      if (partitionKeyBuilder_ == null) {
        return partitionKey_ == null ? com.scalar.db.rpc.Key.getDefaultInstance() : partitionKey_;
      } else {
        return partitionKeyBuilder_.getMessage();
      }
    }
    /**
     * <code>.rpc.Key partition_key = 3;</code>
     */
    public Builder setPartitionKey(com.scalar.db.rpc.Key value) {
      if (partitionKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        partitionKey_ = value;
      } else {
        partitionKeyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Key partition_key = 3;</code>
     */
    public Builder setPartitionKey(
        com.scalar.db.rpc.Key.Builder builderForValue) {
      if (partitionKeyBuilder_ == null) {
        partitionKey_ = builderForValue.build();
      } else {
        partitionKeyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Key partition_key = 3;</code>
     */
    public Builder mergePartitionKey(com.scalar.db.rpc.Key value) {
      if (partitionKeyBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          partitionKey_ != null &&
          partitionKey_ != com.scalar.db.rpc.Key.getDefaultInstance()) {
          getPartitionKeyBuilder().mergeFrom(value);
        } else {
          partitionKey_ = value;
        }
      } else {
        partitionKeyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Key partition_key = 3;</code>
     */
    public Builder clearPartitionKey() {
      bitField0_ = (bitField0_ & ~0x00000004);
      partitionKey_ = null;
      if (partitionKeyBuilder_ != null) {
        partitionKeyBuilder_.dispose();
        partitionKeyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Key partition_key = 3;</code>
     */
    public com.scalar.db.rpc.Key.Builder getPartitionKeyBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getPartitionKeyFieldBuilder().getBuilder();
    }
    /**
     * <code>.rpc.Key partition_key = 3;</code>
     */
    public com.scalar.db.rpc.KeyOrBuilder getPartitionKeyOrBuilder() {
      if (partitionKeyBuilder_ != null) {
        return partitionKeyBuilder_.getMessageOrBuilder();
      } else {
        return partitionKey_ == null ?
            com.scalar.db.rpc.Key.getDefaultInstance() : partitionKey_;
      }
    }
    /**
     * <code>.rpc.Key partition_key = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.scalar.db.rpc.Key, com.scalar.db.rpc.Key.Builder, com.scalar.db.rpc.KeyOrBuilder> 
        getPartitionKeyFieldBuilder() {
      if (partitionKeyBuilder_ == null) {
        partitionKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.scalar.db.rpc.Key, com.scalar.db.rpc.Key.Builder, com.scalar.db.rpc.KeyOrBuilder>(
                getPartitionKey(),
                getParentForChildren(),
                isClean());
        partitionKey_ = null;
      }
      return partitionKeyBuilder_;
    }

    private com.scalar.db.rpc.Key clusteringKey_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.scalar.db.rpc.Key, com.scalar.db.rpc.Key.Builder, com.scalar.db.rpc.KeyOrBuilder> clusteringKeyBuilder_;
    /**
     * <code>.rpc.Key clustering_key = 4;</code>
     * @return Whether the clusteringKey field is set.
     */
    public boolean hasClusteringKey() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.rpc.Key clustering_key = 4;</code>
     * @return The clusteringKey.
     */
    public com.scalar.db.rpc.Key getClusteringKey() {
      if (clusteringKeyBuilder_ == null) {
        return clusteringKey_ == null ? com.scalar.db.rpc.Key.getDefaultInstance() : clusteringKey_;
      } else {
        return clusteringKeyBuilder_.getMessage();
      }
    }
    /**
     * <code>.rpc.Key clustering_key = 4;</code>
     */
    public Builder setClusteringKey(com.scalar.db.rpc.Key value) {
      if (clusteringKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        clusteringKey_ = value;
      } else {
        clusteringKeyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Key clustering_key = 4;</code>
     */
    public Builder setClusteringKey(
        com.scalar.db.rpc.Key.Builder builderForValue) {
      if (clusteringKeyBuilder_ == null) {
        clusteringKey_ = builderForValue.build();
      } else {
        clusteringKeyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Key clustering_key = 4;</code>
     */
    public Builder mergeClusteringKey(com.scalar.db.rpc.Key value) {
      if (clusteringKeyBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          clusteringKey_ != null &&
          clusteringKey_ != com.scalar.db.rpc.Key.getDefaultInstance()) {
          getClusteringKeyBuilder().mergeFrom(value);
        } else {
          clusteringKey_ = value;
        }
      } else {
        clusteringKeyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Key clustering_key = 4;</code>
     */
    public Builder clearClusteringKey() {
      bitField0_ = (bitField0_ & ~0x00000008);
      clusteringKey_ = null;
      if (clusteringKeyBuilder_ != null) {
        clusteringKeyBuilder_.dispose();
        clusteringKeyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Key clustering_key = 4;</code>
     */
    public com.scalar.db.rpc.Key.Builder getClusteringKeyBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getClusteringKeyFieldBuilder().getBuilder();
    }
    /**
     * <code>.rpc.Key clustering_key = 4;</code>
     */
    public com.scalar.db.rpc.KeyOrBuilder getClusteringKeyOrBuilder() {
      if (clusteringKeyBuilder_ != null) {
        return clusteringKeyBuilder_.getMessageOrBuilder();
      } else {
        return clusteringKey_ == null ?
            com.scalar.db.rpc.Key.getDefaultInstance() : clusteringKey_;
      }
    }
    /**
     * <code>.rpc.Key clustering_key = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.scalar.db.rpc.Key, com.scalar.db.rpc.Key.Builder, com.scalar.db.rpc.KeyOrBuilder> 
        getClusteringKeyFieldBuilder() {
      if (clusteringKeyBuilder_ == null) {
        clusteringKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.scalar.db.rpc.Key, com.scalar.db.rpc.Key.Builder, com.scalar.db.rpc.KeyOrBuilder>(
                getClusteringKey(),
                getParentForChildren(),
                isClean());
        clusteringKey_ = null;
      }
      return clusteringKeyBuilder_;
    }

    private int consistency_ = 0;
    /**
     * <code>.rpc.Consistency consistency = 5;</code>
     * @return The enum numeric value on the wire for consistency.
     */
    @java.lang.Override public int getConsistencyValue() {
      return consistency_;
    }
    /**
     * <code>.rpc.Consistency consistency = 5;</code>
     * @param value The enum numeric value on the wire for consistency to set.
     * @return This builder for chaining.
     */
    public Builder setConsistencyValue(int value) {
      consistency_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Consistency consistency = 5;</code>
     * @return The consistency.
     */
    @java.lang.Override
    public com.scalar.db.rpc.Consistency getConsistency() {
      com.scalar.db.rpc.Consistency result = com.scalar.db.rpc.Consistency.forNumber(consistency_);
      return result == null ? com.scalar.db.rpc.Consistency.UNRECOGNIZED : result;
    }
    /**
     * <code>.rpc.Consistency consistency = 5;</code>
     * @param value The consistency to set.
     * @return This builder for chaining.
     */
    public Builder setConsistency(com.scalar.db.rpc.Consistency value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      consistency_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Consistency consistency = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearConsistency() {
      bitField0_ = (bitField0_ & ~0x00000010);
      consistency_ = 0;
      onChanged();
      return this;
    }

    private com.scalar.db.rpc.MutateCondition condition_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.scalar.db.rpc.MutateCondition, com.scalar.db.rpc.MutateCondition.Builder, com.scalar.db.rpc.MutateConditionOrBuilder> conditionBuilder_;
    /**
     * <code>.rpc.MutateCondition condition = 6;</code>
     * @return Whether the condition field is set.
     */
    public boolean hasCondition() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>.rpc.MutateCondition condition = 6;</code>
     * @return The condition.
     */
    public com.scalar.db.rpc.MutateCondition getCondition() {
      if (conditionBuilder_ == null) {
        return condition_ == null ? com.scalar.db.rpc.MutateCondition.getDefaultInstance() : condition_;
      } else {
        return conditionBuilder_.getMessage();
      }
    }
    /**
     * <code>.rpc.MutateCondition condition = 6;</code>
     */
    public Builder setCondition(com.scalar.db.rpc.MutateCondition value) {
      if (conditionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        condition_ = value;
      } else {
        conditionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.MutateCondition condition = 6;</code>
     */
    public Builder setCondition(
        com.scalar.db.rpc.MutateCondition.Builder builderForValue) {
      if (conditionBuilder_ == null) {
        condition_ = builderForValue.build();
      } else {
        conditionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.MutateCondition condition = 6;</code>
     */
    public Builder mergeCondition(com.scalar.db.rpc.MutateCondition value) {
      if (conditionBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          condition_ != null &&
          condition_ != com.scalar.db.rpc.MutateCondition.getDefaultInstance()) {
          getConditionBuilder().mergeFrom(value);
        } else {
          condition_ = value;
        }
      } else {
        conditionBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.MutateCondition condition = 6;</code>
     */
    public Builder clearCondition() {
      bitField0_ = (bitField0_ & ~0x00000020);
      condition_ = null;
      if (conditionBuilder_ != null) {
        conditionBuilder_.dispose();
        conditionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.MutateCondition condition = 6;</code>
     */
    public com.scalar.db.rpc.MutateCondition.Builder getConditionBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getConditionFieldBuilder().getBuilder();
    }
    /**
     * <code>.rpc.MutateCondition condition = 6;</code>
     */
    public com.scalar.db.rpc.MutateConditionOrBuilder getConditionOrBuilder() {
      if (conditionBuilder_ != null) {
        return conditionBuilder_.getMessageOrBuilder();
      } else {
        return condition_ == null ?
            com.scalar.db.rpc.MutateCondition.getDefaultInstance() : condition_;
      }
    }
    /**
     * <code>.rpc.MutateCondition condition = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.scalar.db.rpc.MutateCondition, com.scalar.db.rpc.MutateCondition.Builder, com.scalar.db.rpc.MutateConditionOrBuilder> 
        getConditionFieldBuilder() {
      if (conditionBuilder_ == null) {
        conditionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.scalar.db.rpc.MutateCondition, com.scalar.db.rpc.MutateCondition.Builder, com.scalar.db.rpc.MutateConditionOrBuilder>(
                getCondition(),
                getParentForChildren(),
                isClean());
        condition_ = null;
      }
      return conditionBuilder_;
    }

    private int type_ = 0;
    /**
     * <code>.rpc.Mutation.Type type = 7;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.rpc.Mutation.Type type = 7;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Mutation.Type type = 7;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.scalar.db.rpc.Mutation.Type getType() {
      com.scalar.db.rpc.Mutation.Type result = com.scalar.db.rpc.Mutation.Type.forNumber(type_);
      return result == null ? com.scalar.db.rpc.Mutation.Type.UNRECOGNIZED : result;
    }
    /**
     * <code>.rpc.Mutation.Type type = 7;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.scalar.db.rpc.Mutation.Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.rpc.Mutation.Type type = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000040);
      type_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.scalar.db.rpc.Value> value_ =
      java.util.Collections.emptyList();
    private void ensureValueIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        value_ = new java.util.ArrayList<com.scalar.db.rpc.Value>(value_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.scalar.db.rpc.Value, com.scalar.db.rpc.Value.Builder, com.scalar.db.rpc.ValueOrBuilder> valueBuilder_;

    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<com.scalar.db.rpc.Value> getValueList() {
      if (valueBuilder_ == null) {
        return java.util.Collections.unmodifiableList(value_);
      } else {
        return valueBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getValueCount() {
      if (valueBuilder_ == null) {
        return value_.size();
      } else {
        return valueBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.scalar.db.rpc.Value getValue(int index) {
      if (valueBuilder_ == null) {
        return value_.get(index);
      } else {
        return valueBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setValue(
        int index, com.scalar.db.rpc.Value value) {
      if (valueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
      } else {
        valueBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setValue(
        int index, com.scalar.db.rpc.Value.Builder builderForValue) {
      if (valueBuilder_ == null) {
        ensureValueIsMutable();
        value_.set(index, builderForValue.build());
        onChanged();
      } else {
        valueBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addValue(com.scalar.db.rpc.Value value) {
      if (valueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
      } else {
        valueBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addValue(
        int index, com.scalar.db.rpc.Value value) {
      if (valueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueIsMutable();
        value_.add(index, value);
        onChanged();
      } else {
        valueBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addValue(
        com.scalar.db.rpc.Value.Builder builderForValue) {
      if (valueBuilder_ == null) {
        ensureValueIsMutable();
        value_.add(builderForValue.build());
        onChanged();
      } else {
        valueBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addValue(
        int index, com.scalar.db.rpc.Value.Builder builderForValue) {
      if (valueBuilder_ == null) {
        ensureValueIsMutable();
        value_.add(index, builderForValue.build());
        onChanged();
      } else {
        valueBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addAllValue(
        java.lang.Iterable<? extends com.scalar.db.rpc.Value> values) {
      if (valueBuilder_ == null) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
      } else {
        valueBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearValue() {
      if (valueBuilder_ == null) {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        valueBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder removeValue(int index) {
      if (valueBuilder_ == null) {
        ensureValueIsMutable();
        value_.remove(index);
        onChanged();
      } else {
        valueBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.scalar.db.rpc.Value.Builder getValueBuilder(
        int index) {
      return getValueFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.scalar.db.rpc.ValueOrBuilder getValueOrBuilder(
        int index) {
      if (valueBuilder_ == null) {
        return value_.get(index);  } else {
        return valueBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends com.scalar.db.rpc.ValueOrBuilder> 
         getValueOrBuilderList() {
      if (valueBuilder_ != null) {
        return valueBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(value_);
      }
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.scalar.db.rpc.Value.Builder addValueBuilder() {
      return getValueFieldBuilder().addBuilder(
          com.scalar.db.rpc.Value.getDefaultInstance());
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.scalar.db.rpc.Value.Builder addValueBuilder(
        int index) {
      return getValueFieldBuilder().addBuilder(
          index, com.scalar.db.rpc.Value.getDefaultInstance());
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Value value = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<com.scalar.db.rpc.Value.Builder> 
         getValueBuilderList() {
      return getValueFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.scalar.db.rpc.Value, com.scalar.db.rpc.Value.Builder, com.scalar.db.rpc.ValueOrBuilder> 
        getValueFieldBuilder() {
      if (valueBuilder_ == null) {
        valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.scalar.db.rpc.Value, com.scalar.db.rpc.Value.Builder, com.scalar.db.rpc.ValueOrBuilder>(
                value_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        value_ = null;
      }
      return valueBuilder_;
    }

    private java.util.List<com.scalar.db.rpc.Column> columns_ =
      java.util.Collections.emptyList();
    private void ensureColumnsIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        columns_ = new java.util.ArrayList<com.scalar.db.rpc.Column>(columns_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.scalar.db.rpc.Column, com.scalar.db.rpc.Column.Builder, com.scalar.db.rpc.ColumnOrBuilder> columnsBuilder_;

    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public java.util.List<com.scalar.db.rpc.Column> getColumnsList() {
      if (columnsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(columns_);
      } else {
        return columnsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public int getColumnsCount() {
      if (columnsBuilder_ == null) {
        return columns_.size();
      } else {
        return columnsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public com.scalar.db.rpc.Column getColumns(int index) {
      if (columnsBuilder_ == null) {
        return columns_.get(index);
      } else {
        return columnsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public Builder setColumns(
        int index, com.scalar.db.rpc.Column value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.set(index, value);
        onChanged();
      } else {
        columnsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public Builder setColumns(
        int index, com.scalar.db.rpc.Column.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.set(index, builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public Builder addColumns(com.scalar.db.rpc.Column value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.add(value);
        onChanged();
      } else {
        columnsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public Builder addColumns(
        int index, com.scalar.db.rpc.Column value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.add(index, value);
        onChanged();
      } else {
        columnsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public Builder addColumns(
        com.scalar.db.rpc.Column.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.add(builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public Builder addColumns(
        int index, com.scalar.db.rpc.Column.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.add(index, builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public Builder addAllColumns(
        java.lang.Iterable<? extends com.scalar.db.rpc.Column> values) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, columns_);
        onChanged();
      } else {
        columnsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public Builder clearColumns() {
      if (columnsBuilder_ == null) {
        columns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        columnsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public Builder removeColumns(int index) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.remove(index);
        onChanged();
      } else {
        columnsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public com.scalar.db.rpc.Column.Builder getColumnsBuilder(
        int index) {
      return getColumnsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public com.scalar.db.rpc.ColumnOrBuilder getColumnsOrBuilder(
        int index) {
      if (columnsBuilder_ == null) {
        return columns_.get(index);  } else {
        return columnsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public java.util.List<? extends com.scalar.db.rpc.ColumnOrBuilder> 
         getColumnsOrBuilderList() {
      if (columnsBuilder_ != null) {
        return columnsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(columns_);
      }
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public com.scalar.db.rpc.Column.Builder addColumnsBuilder() {
      return getColumnsFieldBuilder().addBuilder(
          com.scalar.db.rpc.Column.getDefaultInstance());
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public com.scalar.db.rpc.Column.Builder addColumnsBuilder(
        int index) {
      return getColumnsFieldBuilder().addBuilder(
          index, com.scalar.db.rpc.Column.getDefaultInstance());
    }
    /**
     * <pre>
     * only for Put operations
     * </pre>
     *
     * <code>repeated .rpc.Column columns = 9;</code>
     */
    public java.util.List<com.scalar.db.rpc.Column.Builder> 
         getColumnsBuilderList() {
      return getColumnsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.scalar.db.rpc.Column, com.scalar.db.rpc.Column.Builder, com.scalar.db.rpc.ColumnOrBuilder> 
        getColumnsFieldBuilder() {
      if (columnsBuilder_ == null) {
        columnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.scalar.db.rpc.Column, com.scalar.db.rpc.Column.Builder, com.scalar.db.rpc.ColumnOrBuilder>(
                columns_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        columns_ = null;
      }
      return columnsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:rpc.Mutation)
  }

  // @@protoc_insertion_point(class_scope:rpc.Mutation)
  private static final com.scalar.db.rpc.Mutation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.scalar.db.rpc.Mutation();
  }

  public static com.scalar.db.rpc.Mutation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Mutation>
      PARSER = new com.google.protobuf.AbstractParser<Mutation>() {
    @java.lang.Override
    public Mutation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Mutation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Mutation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.scalar.db.rpc.Mutation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

