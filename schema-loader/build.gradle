plugins {
    id 'net.ltgt.errorprone' version "${errorpronePluginVersion}"
    id 'com.github.johnrengelman.shadow' version "${shadowPluginVersion}"
    id 'com.github.spotbugs' version "${spotbugsPluginVersion}"
    id 'maven-publish'
    id 'base'
}

base {
    archivesName = "scalardb-schema-loader"
}


dependencies {
    implementation project(':core')
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "info.picocli:picocli:${picocliVersion}"
    testImplementation platform("org.junit:junit-bom:${junitVersion}")
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"

    // for SpotBugs
    compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}"
    testCompileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}"

    // for Error Prone
    errorprone "com.google.errorprone:error_prone_core:${errorproneVersion}"
    errorproneJavac "com.google.errorprone:javac:${errorproneJavacVersion}"
}

javadoc {
    title = "ScalarDB Schema Loader"
}

task dockerfileLint(type: Exec) {
    description 'Lint the Dockerfile'
    commandLine "${project.rootDir}/ci/dockerfile_lint.sh"
}

task copyFilesToDockerBuildContextDir(type: Copy) {
    description 'Copy files to a temporary folder to build the Docker image'
    dependsOn shadowJar
    from("Dockerfile")
    from(tasks.shadowJar.archiveFile)
    into('build/docker')
}

task docker(type: Exec) {
    description 'Build ScalarDB Schema Loader Docker image'
    dependsOn copyFilesToDockerBuildContextDir
    workingDir 'build/docker'
    commandLine 'docker', 'build', "--tag=ghcr.io/scalar-labs/scalardb-schema-loader:${project.version}", "."
}

// Build a fat jar
shadowJar {
    archiveClassifier.set("")
    manifest {
        attributes 'Main-Class': 'com.scalar.db.schemaloader.SchemaLoader'
    }
    mergeServiceFiles()
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        importOrder()
        removeUnusedImports()
        googleJavaFormat(googleJavaFormatVersion)
    }
}

spotbugsMain.reports {
    html.enabled = true
}
spotbugsMain.excludeFilter = file("${project.rootDir}/gradle/spotbugs-exclude.xml")

spotbugsTest.reports {
    html.enabled = true
}
spotbugsTest.excludeFilter = file("${project.rootDir}/gradle/spotbugs-exclude.xml")

// for archiving and uploading to maven central
if (project.gradle.startParameter.taskNames.any { it.endsWith('publish') } ||
        project.gradle.startParameter.taskNames.any { it.endsWith('publishToMavenLocal') }) {
    // not to publish the fat jar to maven central
    shadowJar.enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'scalardb-schema-loader'
            from components.java
            pom {
                name = 'ScalarDB Schema Loader'
                description = 'A tool for schema creation and schema deletion in ScalarDB'
                url = 'https://github.com/scalar-labs/scalardb'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id = 'hiroyuki'
                        name = 'Hiroyuki Yamada'
                        email = 'hiroyuki.yamada@scalar-labs.com'
                    }
                    developer {
                        id = 'brfrn169'
                        name = 'Toshihiro Suzuki'
                        email = 'brfrn169@gmail.com'
                    }
                    developer {
                        id = 'Torch3333'
                        name = 'Vincent Guilpain'
                        email = 'vincent.guilpain@scalar-labs.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/scalar-labs/scalardb.git'
                    developerConnection = 'scm:git:https://github.com/scalar-labs/scalardb.git'
                    url = 'https://github.com/scalar-labs/scalardb'
                }
            }
        }
    }
    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}
