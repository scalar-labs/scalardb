plugins {
    id 'com.palantir.docker' version "${dockerPluginVersion}"
    id 'net.ltgt.errorprone' version "${errorpronePluginVersion}"
    id 'com.github.johnrengelman.shadow' version "${shadowPluginVersion}"
    id 'com.github.spotbugs' version "${spotbugsPluginVersion}"
    id 'maven-publish'
    id 'signing'
}

archivesBaseName = "scalardb-schema-loader"

dependencies {
    implementation project(':core')
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "info.picocli:picocli:${picocliVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"

    // for SpotBugs
    compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}"
    testCompileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}"

    // for Error Prone
    errorprone "com.google.errorprone:error_prone_core:${errorproneVersion}"
    errorproneJavac "com.google.errorprone:javac:${errorproneJavacVersion}"
}

javadoc {
    title = "ScalarDB Schema Loader"
}

docker {
    dependsOn shadowJar
    name "ghcr.io/scalar-labs/scalardb-schema-loader:${project.version}"
    files tasks.shadowJar.outputs
}

task dockerfileLint(type: Exec) {
    description 'Lint the Dockerfile'
    commandLine "${project.rootDir}/ci/dockerfile_lint.sh"
}

// Build a fat jar
shadowJar {
    archiveClassifier.set("")
    manifest {
        attributes 'Main-Class': 'com.scalar.db.schemaloader.SchemaLoader'
    }
    mergeServiceFiles()
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        importOrder()
        removeUnusedImports()
        googleJavaFormat(googleJavaFormatVersion)
    }
}

spotbugsMain.reports {
    html.enabled = true
}
spotbugsMain.excludeFilter = file("${project.rootDir}/gradle/spotbugs-exclude.xml")

spotbugsTest.reports {
    html.enabled = true
}
spotbugsTest.excludeFilter = file("${project.rootDir}/gradle/spotbugs-exclude.xml")

// for archiving and uploading to maven central
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'scalardb-schema-loader'
            from components.java
            pom {
                name = 'ScalarDB Schema Loader'
                description = 'A tool for schema creation and schema deletion in ScalarDB'
                url = 'https://github.com/scalar-labs/scalardb'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id = 'hiroyuki'
                        name = 'Hiroyuki Yamada'
                        email = 'hiroyuki.yamada@scalar-labs.com'
                    }
                    developer {
                        id = 'brfrn169'
                        name = 'Toshihiro Suzuki'
                        email = 'brfrn169@gmail.com'
                    }
                    developer {
                        id = 'Torch3333'
                        name = 'Vincent Guilpain'
                        email = 'vincent.guilpain@scalar-labs.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/scalar-labs/scalardb.git'
                    developerConnection = 'scm:git:https://github.com/scalar-labs/scalardb.git'
                    url = 'https://github.com/scalar-labs/scalardb'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.properties['ossrhUsername'] ?: ""
                password = project.properties['ossrhPassword'] ?: ""
            }
        }
    }
}

signing {
    required { project.gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}
