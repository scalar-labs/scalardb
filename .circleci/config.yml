version: 2
workflows:
  version: 2
  scalardb-ci:
    jobs:
      - check
      - integration-test-for-cassandra
      - integration-test-for-cosmos
      - integration-test-for-dynamo
      - integration-test-for-jdbc-mysql
      - integration-test-for-jdbc-postgresql
      - integration-test-for-jdbc-oracle
      - integration-test-for-jdbc-sqlserver
      - integration-test-for-multi-storage
      - integration-test-for-scalardb-server
      - integration-test-for-two-phase-consensus-commit
jobs:
  check:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "core/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "core/build.gradle" }}

      # run check!
      - run: gradle check

      - run:
          name: Save Gradle test reports
          command: |
            mkdir -p /tmp/gradle_test_reports/core
            mkdir -p /tmp/gradle_test_reports/server
            mkdir -p /tmp/gradle_test_reports/schema-loader
            cp -a core/build/reports/tests/test /tmp/gradle_test_reports/core/
            cp -a server/build/reports/tests/test /tmp/gradle_test_reports/server/
            cp -a schema-loader/build/reports/tests/test /tmp/gradle_test_reports/schema-loader/
          when: always

      - run:
          name: Save SpotBugs reports
          command: |
            mkdir -p /tmp/gradle_spotbugs_reports/core
            mkdir -p /tmp/gradle_spotbugs_reports/server
            mkdir -p /tmp/gradle_spotbugs_reports/schema-loader
            cp -a core/build/reports/spotbugs /tmp/gradle_spotbugs_reports/core/
            cp -a server/build/reports/spotbugs /tmp/gradle_spotbugs_reports/server/
            cp -a schema-loader/build/reports/spotbugs /tmp/gradle_spotbugs_reports/schema-loader/
          when: always

      - store_artifacts:
          path: /tmp/gradle_test_reports
          destination: gradle_test_reports

      - store_artifacts:
          path: /tmp/gradle_spotbugs_reports
          destination: gradle_spotbugs_reports

  integration-test-for-cassandra:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: cassandra:3.11.11
        environment:
          MAX_HEAP_SIZE: 2048m
          HEAP_NEWSIZE: 512m

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "core/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "core/build.gradle" }}

      # https://support.circleci.com/hc/en-us/articles/360006773953-Race-Conditions-Wait-For-Database
      - run:
          name: Wait for Cassandra
          # dockerize command is included in circleci/openjdk:8-jdk image
          command: dockerize -wait tcp://localhost:9042 -timeout 1m

      - run:
          name: Run integration test
          command: gradle integrationTestCassandra

      - run:
          name: Save Gradle integration test reports
          command: |
            mkdir -p /tmp/gradle_integration_test_reports/core
            mkdir -p /tmp/gradle_integration_test_reports/schema-loader
            cp -a core/build/reports/tests/integrationTestCassandra /tmp/gradle_integration_test_reports/core/
            cp -a schema-loader/build/reports/tests/integrationTestCassandra /tmp/gradle_integration_test_reports/schema-loader/
          when: always

      - store_artifacts:
          path: /tmp/gradle_integration_test_reports
          destination: gradle_integration_test_reports

  integration-test-for-cosmos:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "core/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "core/build.gradle" }}

      - run:
          name: Run integration test
          no_output_timeout: 30m
          command: gradle integrationTestCosmos -Dscalardb.cosmos.uri=${COSMOS_URI} -Dscalardb.cosmos.password=${COSMOS_PASSWORD} -Dscalardb.cosmos.database_prefix="${CIRCLE_BUILD_NUM}_"

      - run:
          name: Save Gradle integration test reports
          command: |
            mkdir -p /tmp/gradle_integration_test_reports/core
            mkdir -p /tmp/gradle_integration_test_reports/schema-loader
            cp -a core/build/reports/tests/integrationTestCosmos /tmp/gradle_integration_test_reports/core/
            cp -a schema-loader/build/reports/tests/integrationTestCosmos /tmp/gradle_integration_test_reports/schema-loader/
          when: always

      - store_artifacts:
          path: /tmp/gradle_integration_test_reports
          destination: gradle_integration_test_reports

  integration-test-for-dynamo:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: amazon/dynamodb-local:1.17.0

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "core/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "core/build.gradle" }}

      - run:
          name: Run integration test
          no_output_timeout: 20m
          command: gradle integrationTestDynamo

      - run:
          name: Save Gradle integration test reports
          command: |
            mkdir -p /tmp/gradle_integration_test_reports/core
            mkdir -p /tmp/gradle_integration_test_reports/schema-loader
            cp -a core/build/reports/tests/integrationTestDynamo /tmp/gradle_integration_test_reports/core/
            cp -a schema-loader/build/reports/tests/integrationTestDynamo /tmp/gradle_integration_test_reports/schema-loader/
          when: always

      - store_artifacts:
          path: /tmp/gradle_integration_test_reports
          destination: gradle_integration_test_reports

  integration-test-for-jdbc-mysql:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: circleci/mysql:8.0.27
        environment:
          MYSQL_ROOT_PASSWORD: mysql

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "core/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "core/build.gradle" }}

      - run:
          name: Run integration test
          command: gradle integrationTestJdbc

      - run:
          name: Save Gradle integration test reports
          command: |
            mkdir -p /tmp/gradle_integration_test_reports/core
            mkdir -p /tmp/gradle_integration_test_reports/schema-loader
            cp -a core/build/reports/tests/integrationTestJdbc /tmp/gradle_integration_test_reports/core/
            cp -a schema-loader/build/reports/tests/integrationTestJdbc /tmp/gradle_integration_test_reports/schema-loader/
          when: always

      - store_artifacts:
          path: /tmp/gradle_integration_test_reports
          destination: gradle_integration_test_reports

  integration-test-for-jdbc-postgresql:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: postgres:14.1-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "core/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "core/build.gradle" }}

      - run:
          name: Run integration test
          command: gradle integrationTestJdbc -Dscalardb.jdbc.url=jdbc:postgresql://localhost:5432/ -Dscalardb.jdbc.username=postgres -Dscalardb.jdbc.password=postgres

      - run:
          name: Save Gradle integration test reports
          command: |
            mkdir -p /tmp/gradle_integration_test_reports/core
            mkdir -p /tmp/gradle_integration_test_reports/schema-loader
            cp -a core/build/reports/tests/integrationTestJdbc /tmp/gradle_integration_test_reports/core/
            cp -a schema-loader/build/reports/tests/integrationTestJdbc /tmp/gradle_integration_test_reports/schema-loader/
          when: always

      - store_artifacts:
          path: /tmp/gradle_integration_test_reports
          destination: gradle_integration_test_reports

  integration-test-for-jdbc-oracle:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: ghcr.io/scalar-labs/oracle/database:21.3.0-xe
        auth:
          username: scalar-git
          password: ${SCALAR_GIT_PASSWORD}
        environment:
          ORACLE_PWD: Oracle21

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "core/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "core/build.gradle" }}

      # https://support.circleci.com/hc/en-us/articles/360006773953-Race-Conditions-Wait-For-Database
      - run:
          name: Wait for Oracle Database to be ready
          # dockerize command is included in circleci/openjdk:8-jdk image
          command: dockerize -wait tcp://localhost:5500 -timeout 15m

      - run:
          name: Run integration test
          command: gradle integrationTestJdbc -Dscalardb.jdbc.url=jdbc:oracle:thin:@localhost:1521/XEPDB1 -Dscalardb.jdbc.username=SYSTEM -Dscalardb.jdbc.password=Oracle21

      - run:
          name: Save Gradle integration test reports
          command: |
            mkdir -p /tmp/gradle_integration_test_reports/core
            mkdir -p /tmp/gradle_integration_test_reports/schema-loader
            cp -a core/build/reports/tests/integrationTestJdbc /tmp/gradle_integration_test_reports/core/
            cp -a schema-loader/build/reports/tests/integrationTestJdbc /tmp/gradle_integration_test_reports/schema-loader/
          when: always

      - store_artifacts:
          path: /tmp/gradle_integration_test_reports
          destination: gradle_integration_test_reports

  integration-test-for-jdbc-sqlserver:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
          MSSQL_PID: "Express"
          SA_PASSWORD: "SqlServer19"
          ACCEPT_EULA: "Y"

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "core/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "core/build.gradle" }}

      - run:
          name: Run integration test
          command: gradle integrationTestJdbc -Dscalardb.jdbc.url=jdbc:sqlserver://localhost:1433 -Dscalardb.jdbc.username=sa -Dscalardb.jdbc.password=SqlServer19

      - run:
          name: Save Gradle integration test reports
          command: |
            mkdir -p /tmp/gradle_integration_test_reports/core
            mkdir -p /tmp/gradle_integration_test_reports/schema-loader
            cp -a core/build/reports/tests/integrationTestJdbc /tmp/gradle_integration_test_reports/core/
            cp -a schema-loader/build/reports/tests/integrationTestJdbc /tmp/gradle_integration_test_reports/schema-loader/
          when: always

      - store_artifacts:
          path: /tmp/gradle_integration_test_reports
          destination: gradle_integration_test_reports

  integration-test-for-multi-storage:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: cassandra:3.11.11
        environment:
          MAX_HEAP_SIZE: 1536m
          HEAP_NEWSIZE: 256m
      - image: circleci/mysql:8.0.27
        environment:
          MYSQL_ROOT_PASSWORD: mysql

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "core/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "core/build.gradle" }}

      # https://support.circleci.com/hc/en-us/articles/360006773953-Race-Conditions-Wait-For-Database
      - run:
          name: Wait for Cassandra
          # dockerize command is included in circleci/openjdk:8-jdk image
          command: dockerize -wait tcp://localhost:9042 -timeout 1m

      - run:
          name: Run integration test
          command: gradle integrationTestMultiStorage

      - run:
          name: Save Gradle integration test reports
          command: |
            mkdir -p /tmp/gradle_integration_test_reports/core
            mkdir -p /tmp/gradle_integration_test_reports/schema-loader
            cp -a core/build/reports/tests/integrationTestMultiStorage /tmp/gradle_integration_test_reports/core/
            cp -a schema-loader/build/reports/tests/integrationTestMultiStorage /tmp/gradle_integration_test_reports/schema-loader/
          when: always

      - store_artifacts:
          path: /tmp/gradle_integration_test_reports
          destination: gradle_integration_test_reports

  integration-test-for-scalardb-server:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: circleci/mysql:8.0.27
        environment:
          MYSQL_ROOT_PASSWORD: mysql

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "server/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "server/build.gradle" }}

      - run:
          name: Run integration test
          command: gradle integrationTestScalarDbServer

      - run:
          name: Save Gradle integration test reports
          command: |
            mkdir -p /tmp/gradle_integration_test_reports/server
            mkdir -p /tmp/gradle_integration_test_reports/schema-loader
            cp -a server/build/reports/tests/integrationTestScalarDbServer /tmp/gradle_integration_test_reports/server/
            cp -a schema-loader/build/reports/tests/integrationTestScalarDbServer /tmp/gradle_integration_test_reports/schema-loader/
          when: always

      - store_artifacts:
          path: /tmp/gradle_integration_test_reports
          destination: gradle_integration_test_reports

  integration-test-for-two-phase-consensus-commit:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: circleci/mysql:8.0.27
        environment:
          MYSQL_ROOT_PASSWORD: mysql

    working_directory: ~/repo

    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Run integration test
          command: gradle integrationTestTwoPhaseConsensusCommit

      - run:
          name: Save Gradle integration test reports
          command: |
            mkdir -p /tmp/gradle_integration_test_reports
            cp -a core/build/reports/tests/integrationTestTwoPhaseConsensusCommit /tmp/gradle_integration_test_reports/
          when: always

      - store_artifacts:
          path: /tmp/gradle_integration_test_reports
          destination: gradle_integration_test_reports
