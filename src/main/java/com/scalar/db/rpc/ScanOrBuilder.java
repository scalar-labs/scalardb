// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scalardb.proto

package com.scalar.db.rpc;

public interface ScanOrBuilder extends
    // @@protoc_insertion_point(interface_extends:rpc.Scan)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string namespace = 1;</code>
   * @return The namespace.
   */
  java.lang.String getNamespace();
  /**
   * <code>string namespace = 1;</code>
   * @return The bytes for namespace.
   */
  com.google.protobuf.ByteString
      getNamespaceBytes();

  /**
   * <code>string table = 2;</code>
   * @return The table.
   */
  java.lang.String getTable();
  /**
   * <code>string table = 2;</code>
   * @return The bytes for table.
   */
  com.google.protobuf.ByteString
      getTableBytes();

  /**
   * <code>.rpc.Key partition_key = 3;</code>
   * @return Whether the partitionKey field is set.
   */
  boolean hasPartitionKey();
  /**
   * <code>.rpc.Key partition_key = 3;</code>
   * @return The partitionKey.
   */
  com.scalar.db.rpc.Key getPartitionKey();
  /**
   * <code>.rpc.Key partition_key = 3;</code>
   */
  com.scalar.db.rpc.KeyOrBuilder getPartitionKeyOrBuilder();

  /**
   * <code>.rpc.Consistency consistency = 4;</code>
   * @return The enum numeric value on the wire for consistency.
   */
  int getConsistencyValue();
  /**
   * <code>.rpc.Consistency consistency = 4;</code>
   * @return The consistency.
   */
  com.scalar.db.rpc.Consistency getConsistency();

  /**
   * <code>repeated string projection = 5;</code>
   * @return A list containing the projection.
   */
  java.util.List<java.lang.String>
      getProjectionList();
  /**
   * <code>repeated string projection = 5;</code>
   * @return The count of projection.
   */
  int getProjectionCount();
  /**
   * <code>repeated string projection = 5;</code>
   * @param index The index of the element to return.
   * @return The projection at the given index.
   */
  java.lang.String getProjection(int index);
  /**
   * <code>repeated string projection = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the projection at the given index.
   */
  com.google.protobuf.ByteString
      getProjectionBytes(int index);

  /**
   * <code>.rpc.Key start_clustering_key = 6;</code>
   * @return Whether the startClusteringKey field is set.
   */
  boolean hasStartClusteringKey();
  /**
   * <code>.rpc.Key start_clustering_key = 6;</code>
   * @return The startClusteringKey.
   */
  com.scalar.db.rpc.Key getStartClusteringKey();
  /**
   * <code>.rpc.Key start_clustering_key = 6;</code>
   */
  com.scalar.db.rpc.KeyOrBuilder getStartClusteringKeyOrBuilder();

  /**
   * <code>bool start_inclusive = 7;</code>
   * @return The startInclusive.
   */
  boolean getStartInclusive();

  /**
   * <code>.rpc.Key end_clustering_key = 8;</code>
   * @return Whether the endClusteringKey field is set.
   */
  boolean hasEndClusteringKey();
  /**
   * <code>.rpc.Key end_clustering_key = 8;</code>
   * @return The endClusteringKey.
   */
  com.scalar.db.rpc.Key getEndClusteringKey();
  /**
   * <code>.rpc.Key end_clustering_key = 8;</code>
   */
  com.scalar.db.rpc.KeyOrBuilder getEndClusteringKeyOrBuilder();

  /**
   * <code>bool end_inclusive = 9;</code>
   * @return The endInclusive.
   */
  boolean getEndInclusive();

  /**
   * <code>repeated .rpc.Ordering ordering = 10;</code>
   */
  java.util.List<com.scalar.db.rpc.Ordering> 
      getOrderingList();
  /**
   * <code>repeated .rpc.Ordering ordering = 10;</code>
   */
  com.scalar.db.rpc.Ordering getOrdering(int index);
  /**
   * <code>repeated .rpc.Ordering ordering = 10;</code>
   */
  int getOrderingCount();
  /**
   * <code>repeated .rpc.Ordering ordering = 10;</code>
   */
  java.util.List<? extends com.scalar.db.rpc.OrderingOrBuilder> 
      getOrderingOrBuilderList();
  /**
   * <code>repeated .rpc.Ordering ordering = 10;</code>
   */
  com.scalar.db.rpc.OrderingOrBuilder getOrderingOrBuilder(
      int index);

  /**
   * <code>int32 limit = 11;</code>
   * @return The limit.
   */
  int getLimit();
}
