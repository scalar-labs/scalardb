name: Upload artifacts

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      CR_PAT:
        required: true
      SIGNING_SECRET_KEY_RING:
        required: true
      SIGNING_KEY_ID:
        required: true
      SIGNING_PASSWORD:
        required: true
      OSSRH_USERNAMAE:
        required: true
      OSSRH_PASSWORD:
        required: true

jobs:
  upload-artifacts:
    runs-on: ubuntu-latest

    steps:
      - name: Set version
        id: version
        run: |
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/v##g")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          MINOR_VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/v##g" | grep -o -E "^[0-9]+\.[0-9]+")
          echo "minor_version=${MINOR_VERSION}" >> $GITHUB_OUTPUT
          LATEST_VERSION=$(curl -s -u "${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/scalar-labs/scalardb/tags | jq -r .[].name | sort --version-sort -r | head -n 1 | sed -e "s#v##g")
          echo "latest_version=${LATEST_VERSION}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Create containers
        run: ./gradlew docker

      - name: Push containers
        run: |
          docker push ghcr.io/scalar-labs/scalardb-schema-loader:${{ steps.version.outputs.version }}

      - name: Upload scalardb, scalardb-schema-loader, and scalardb-integration-test to Maven Central Repository
        run: |
          echo "${{secrets.SIGNING_SECRET_KEY_RING}}" | base64 -d > ~/.gradle/secring.gpg
          ./gradlew publish \
          -Psigning.keyId="${{ secrets.SIGNING_KEY_ID }}" \
          -P'signing.password'="${{ secrets.SIGNING_PASSWORD }}" \
          -Psigning.secretKeyRingFile="$(echo ~/.gradle/secring.gpg)" \
          -PossrhUsername="${{ secrets.OSSRH_USERNAMAE }}" \
          -PossrhPassword="${{ secrets.OSSRH_PASSWORD }}"
