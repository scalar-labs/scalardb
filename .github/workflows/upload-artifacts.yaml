name: Upload artifacts

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      CR_PAT:
        required: true
      MAVEN_CENTRAL_USERNAME:
        required: true
      MAVEN_CENTRAL_PASSWORD:
        required: true
      MAVEN_CENTRAL_GPG_PASSPHRASE:
        required: true
      MAVEN_CENTRAL_GPG_PUBLIC_KEY:
        required: true
      MAVEN_CENTRAL_GPG_SECRET_KEY:
        required: true

jobs:
  upload-artifacts:
    runs-on: ubuntu-latest

    steps:
      - name: Set version
        id: version
        run: |
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/v##g")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          MINOR_VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/v##g" | grep -o -E "^[0-9]+\.[0-9]+")
          echo "minor_version=${MINOR_VERSION}" >> $GITHUB_OUTPUT
          LATEST_VERSION=$(curl -s -u "${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/scalar-labs/scalardb/tags | jq -r .[].name | sort --version-sort -r | head -n 1 | sed -e "s#v##g")
          echo "latest_version=${LATEST_VERSION}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v5

      - name: Set up JDK 8
        uses: actions/setup-java@v5
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Prepare artifacts in staging-deploy directories
        run: ./gradlew publish

      - name: Upload artifacts to Maven Central Repository
        env:
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.MAVEN_CENTRAL_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.MAVEN_CENTRAL_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.MAVEN_CENTRAL_GPG_SECRET_KEY }}
        run: ./gradlew jreleaserDeploy -Dorg.gradle.jvmargs="-Xmx4g"

      - name: Upload JReleaser outputs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-release
          path: |
            build/jreleaser/trace.log
            build/jreleaser/output.properties

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Create containers
        run: ./gradlew docker

      - name: Push containers
        run: |
          docker push ghcr.io/scalar-labs/scalardb-schema-loader:${{ steps.version.outputs.version }}
