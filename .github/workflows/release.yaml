name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Set version
        id: version
        run: |
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/v##g")
          echo ::set-output name=version::${VERSION}

      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Create containers
        run: gradle docker

      - name: Push containers
        run: |
          docker push ghcr.io/scalar-labs/scalardb-server:${{ steps.version.outputs.version }}
          docker push ghcr.io/scalar-labs/scalardb-schema-loader:${{ steps.version.outputs.version }}

      - name: Upload scalardb, scalardb-server, scalardb-rpc, and scalardb-schema-loader to Maven Central Repository
        run: |
          echo "${{secrets.SIGNING_SECRET_KEY_RING}}" | base64 -d > ~/.gradle/secring.gpg
          gradle publish \
          -Psigning.keyId="${{ secrets.SIGNING_KEY_ID }}" \
          -P'signing.password'="${{ secrets.SIGNING_PASSWORD }}" \
          -Psigning.secretKeyRingFile="$(echo ~/.gradle/secring.gpg)" \
          -PossrhUsername="${{ secrets.OSSRH_USERNAMAE }}" \
          -PossrhPassword="${{ secrets.OSSRH_PASSWORD }}"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Build scalardb-server zip
        run: gradle :server:distZip

      - name: Upload scalardb-server zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: server/build/distributions/scalardb-server-${{ steps.version.outputs.version }}.zip
          asset_name: scalardb-server-${{ steps.version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Build scalardb-schema-loader jar
        run: gradle :schema-loader:shadowJar

      - name: Upload scalardb-schema-loader jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: schema-loader/build/libs/scalardb-schema-loader-${{ steps.version.outputs.version }}.jar
          asset_name: scalardb-schema-loader-${{ steps.version.outputs.version }}.jar
          asset_content_type: application/java-archive
