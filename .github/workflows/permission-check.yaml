name: Test Permissions

on:
  workflow_dispatch:

env:
  TERM: dumb
  JAVA_VERSION: '8'
  JAVA_VENDOR: 'temurin'
  DYNAMO_ACCESS_KEY_ID: ${{ secrets.DYNAMO_ACCESS_KEY }}
  DYNAMO_SECRET_ACCESS_KEY: ${{ secrets.DYNAMO_SECRET_ACCESS_KEY }}

jobs:
  integration-test-permission-cassandra-3-0:
    name: Cassandra 3.0 Permission Integration Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Start Cassandra with authentication enabled
        run: |
          docker run -d --name cassandra \
            -p 9042:9042 \
            -e CASSANDRA_PASSWORD_SEEDER=yes \
            -e CASSANDRA_PASSWORD=cassandra \
            -e CASSANDRA_AUTHENTICATOR=PasswordAuthenticator \
            -e CASSANDRA_AUTHORIZER=CassandraAuthorizer \
            bitnami/cassandra:3.0

      - name: Wait for Cassandra to be ready
        run: sleep 30

      - name: Execute Gradle 'integrationTestCassandraPermission' task
        run: ./gradlew integrationTestCassandraPermission

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cassandra_3.0_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestCassandraPermission

  integration-test-permission-cassandra-3-11:
    name: Cassandra 3.11 Permission Integration Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Start Cassandra with authentication enabled
        run: |
          docker run -d --name cassandra \
            -p 9042:9042 \
            -e CASSANDRA_PASSWORD_SEEDER=yes \
            -e CASSANDRA_PASSWORD=cassandra \
            -e CASSANDRA_AUTHENTICATOR=PasswordAuthenticator \
            -e CASSANDRA_AUTHORIZER=CassandraAuthorizer \
            bitnami/cassandra:3.11

      - name: Wait for Cassandra to be ready
        run: sleep 30

      - name: Execute Gradle 'integrationTestCassandraPermission' task
        run: ./gradlew integrationTestCassandraPermission

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cassandra_3.11_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestCassandraPermission

  integration-test-permission-dynamo:
    name: DynamoDB Permission Integration Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestDynamoPermission' task
        run: ./gradlew integrationTestDynamoPermission -Dscalardb.dynamo.emulator_used=false -Dscalardb.dynamo.region=ap-northeast-1 -Dscalardb.dynamo.access_key_id=${{ env.DYNAMO_ACCESS_KEY_ID }} -Dscalardb.dynamo.secret_access_key=${{ env.DYNAMO_SECRET_ACCESS_KEY }}

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dynamo_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestDynamoPermission

  integration-test-permission-jdbc-mysql-5-7:
    name: MySQL 5.7 Permission Integration Test
    runs-on: ubuntu-latest

    steps:
      - name: Run MySQL 5.7
        run: |
          docker run -e MYSQL_ROOT_PASSWORD=mysql -p 3306:3306 -d mysql:5.7 --character-set-server=utf8mb4 --collation-server=utf8mb4_bin
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:mysql://localhost:3306/ -Dscalardb.jdbc.username=root -Dscalardb.jdbc.password=mysql

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mysql_5.7_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-mysql-8-0:
    name: MySQL 8.0 Permission Integration Test
    runs-on: ubuntu-latest

    steps:
      - name: Run MySQL 8.0
        run: |
          docker run -e MYSQL_ROOT_PASSWORD=mysql -p 3306:3306 -d mysql:8.0 --character-set-server=utf8mb4 --collation-server=utf8mb4_bin
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:mysql://localhost:3306/ -Dscalardb.jdbc.username=root -Dscalardb.jdbc.password=mysql

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mysql_8.0_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-mysql-8-4:
    name: MySQL 8.4 Permission Integration Test
    runs-on: ubuntu-latest

    steps:
      - name: Run MySQL 8.4
        run: |
          docker run -e MYSQL_ROOT_PASSWORD=mysql -p 3306:3306 -d mysql:8.4 --character-set-server=utf8mb4 --collation-server=utf8mb4_bin
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:mysql://localhost:3306/ -Dscalardb.jdbc.username=root -Dscalardb.jdbc.password=mysql

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mysql_8.4_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-postgresql-13:
    name: PostgreSQL 13 Permission Integration Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:postgresql://localhost:5432/postgres -Dscalardb.jdbc.username=postgres -Dscalardb.jdbc.password=postgres

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postgresql_13_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-postgresql-14:
    name: PostgreSQL 14 Permission Integration Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:postgresql://localhost:5432/postgres -Dscalardb.jdbc.username=postgres -Dscalardb.jdbc.password=postgres

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postgresql_14_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-postgresql-15:
    name: PostgreSQL 15 Permission Integration Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:postgresql://localhost:5432/postgres -Dscalardb.jdbc.username=postgres -Dscalardb.jdbc.password=postgres

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postgresql_15_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-postgresql-16:
    name: PostgreSQL 16 Permission Integration Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:postgresql://localhost:5432/postgres -Dscalardb.jdbc.username=postgres -Dscalardb.jdbc.password=postgres

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postgresql_16_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-postgresql-17:
    name: PostgreSQL 17 Permission Integration Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:postgresql://localhost:5432/postgres -Dscalardb.jdbc.username=postgres -Dscalardb.jdbc.password=postgres

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postgresql_17_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-oracle-19:
    name: Oracle 19 Permission Integration Test
    runs-on: ubuntu-latest

    services:
      oracle:
        image: ghcr.io/scalar-labs/oracle/db-prebuilt:19
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
        ports:
          - 1521:1521

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:oracle:thin:@//localhost:1521/ORCLPDB1 -Dscalardb.jdbc.username=SYSTEM -Dscalardb.jdbc.password=Oracle

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: oracle_19_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-oracle-21:
    name: Oracle 21 Permission Integration Test
    runs-on: ubuntu-latest

    services:
      oracle:
        image: ghcr.io/scalar-labs/oracle/db-prebuilt:21
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
        env:
          ORACLE_PWD: Oracle
        ports:
          - 1521:1521
        options: >-
          --health-cmd "/opt/oracle/checkDBStatus.sh"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 120

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:oracle:thin:@//localhost:1521/XEPDB1 -Dscalardb.jdbc.username=SYSTEM -Dscalardb.jdbc.password=Oracle

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: oracle_21_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-oracle-23:
    name: Oracle 23 Permission Integration Test
    runs-on: ubuntu-latest

    steps:
      - name: Free up ~14GB of disk space by removing the Android SDK
        run: |
          echo "Storage available before deletion"
          df -h /
          echo
          sudo rm -r /usr/local/lib/android
          echo "Storage available after deletion"
          df -h /

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Start Oracle 23 container
        run: docker run -d --name oracle-23 -p 1521:1521  ghcr.io/scalar-labs/oracle/db-prebuilt:23

      - name: Wait for the container to be ready
        timeout-minutes: 5
        run: |
          while [ "`docker inspect -f {{.State.Health.Status}} oracle-23`" != "healthy" ]
          do
            sleep 10
            echo "Container is not yet ready"
          done
          echo "Container is ready"

      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission -Dscalardb.jdbc.url=jdbc:oracle:thin:@//localhost:1521/FREEPDB1 -Dscalardb.jdbc.username=SYSTEM -Dscalardb.jdbc.password=Oracle

      - name: Stop Oracle 23 container
        if: always()
        run: docker stop oracle-23 | xargs docker rm

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: oracle_23_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-sqlserver-2017:
    name: SQL Server 2017 Permission Integration Test
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Sql Server 2017
        uses: rails-sqlserver/setup-mssql@v1
        with:
          components: sqlcmd,sqlengine
          sa-password: "SqlServer17"
          version: 2017

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission "-Dscalardb.jdbc.url=jdbc:sqlserver://localhost:1433;encrypt=true;trustServerCertificate=true" "-Dscalardb.jdbc.username=sa" "-Dscalardb.jdbc.password=SqlServer17" "-Dfile.encoding=UTF-8"

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sqlserver_2017_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-sqlserver-2019:
    name: SQL Server 2019 Permission Integration Test
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          MSSQL_PID: "Express"
          SA_PASSWORD: "SqlServer19"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: --name sqlserver19

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission "-Dscalardb.jdbc.url=jdbc:sqlserver://localhost:1433;encrypt=true;trustServerCertificate=true" "-Dscalardb.jdbc.username=sa" "-Dscalardb.jdbc.password=SqlServer19"

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sqlserver_2019_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission

  integration-test-permission-jdbc-sqlserver-2022:
    name: SQL Server 2022 Permission Integration Test
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          MSSQL_PID: "Express"
          SA_PASSWORD: "SqlServer22"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: --name sqlserver22

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }} (${{ env.JAVA_VENDOR }})
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_VENDOR }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Execute Gradle 'integrationTestJdbcPermission' task
        run: ./gradlew integrationTestJdbcPermission "-Dscalardb.jdbc.url=jdbc:sqlserver://localhost:1433;encrypt=true;trustServerCertificate=true" "-Dscalardb.jdbc.username=sa" "-Dscalardb.jdbc.password=SqlServer22"

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sqlserver_2022_permission_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbcPermission
