name: Supported storages compatibility check

on:
  workflow_dispatch:

env:
  TERM: dumb
jobs:
  cassandra-2-2-integration-test:
    runs-on: ubuntu-latest

    services:
      cassandra:
        image: cassandra:2.2
        env:
          MAX_HEAP_SIZE: 2048m
          HEAP_NEWSIZE: 512m
        ports:
          - 9042:9042

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestCassandra' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestCassandra

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cassandra_2.2_integration_test_reports
          path: core/build/reports/tests/integrationTestCassandra

  cassandra-3-0-integration-test:
    runs-on: ubuntu-latest

    services:
      cassandra:
        image: cassandra:3.0
        env:
          MAX_HEAP_SIZE: 2048m
          HEAP_NEWSIZE: 512m
        ports:
          - 9042:9042

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestCassandra' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestCassandra

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cassandra_3.0_integration_test_reports
          path: core/build/reports/tests/integrationTestCassandra

  cassandra-3-11-integration-test:
    runs-on: ubuntu-latest

    services:
      cassandra:
        image: cassandra:3.11
        env:
          MAX_HEAP_SIZE: 2048m
          HEAP_NEWSIZE: 512m
        ports:
          - 9042:9042

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestCassandra' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestCassandra

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cassandra_3.11_integration_test_reports
          path: core/build/reports/tests/integrationTestCassandra

  dynamo-integration-test:
    runs-on: ubuntu-latest

    services:
      dynamodb:
        image: amazon/dynamodb-local:latest
        ports:
          - 8000:8000

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestDynamo' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestDynamo

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: dynamo_integration_test_reports
          path: core/build/reports/tests/integrationTestDynamo

  jdbc-mysql-5-7-integration-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: mysql
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestJdbc

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_mysql_5.7_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-mysql-8-0-integration-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: mysql
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestJdbc

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_mysql_8.0_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-mysql-8-1-integration-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.1
        env:
          MYSQL_ROOT_PASSWORD: mysql
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestJdbc

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_mysql_8.1_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-postgresql-12-integration-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestJdbc -Dscalardb.jdbc.url=jdbc:postgresql://localhost:5432/ -Dscalardb.jdbc.username=postgres -Dscalardb.jdbc.password=postgres

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_postgresql_12_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-postgresql-13-integration-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestJdbc -Dscalardb.jdbc.url=jdbc:postgresql://localhost:5432/ -Dscalardb.jdbc.username=postgres -Dscalardb.jdbc.password=postgres

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_postgresql_13_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-postgresql-14-integration-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestJdbc -Dscalardb.jdbc.url=jdbc:postgresql://localhost:5432/ -Dscalardb.jdbc.username=postgres -Dscalardb.jdbc.password=postgres

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_postgresql_14_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-postgresql-15-integration-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestJdbc -Dscalardb.jdbc.url=jdbc:postgresql://localhost:5432/ -Dscalardb.jdbc.username=postgres -Dscalardb.jdbc.password=postgres

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_postgresql_15_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-oracle-18-integration-test:
    runs-on: ubuntu-latest

    services:
      oracle:
        image: ghcr.io/scalar-labs/oracle/database:18.4.0-xe
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
        env:
          ORACLE_PWD: Oracle
        ports:
          - 1521:1521
        options: >-
          --health-cmd "/opt/oracle/checkDBStatus.sh"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 120
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Retrieve then store the oracle container ip address in an environment variable.
        run: |
          echo "oracle_db_ip=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}'  $(docker ps -aq))" >> $GITHUB_ENV

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        #       Addressing the Oracle container with "@localhost" in the JDBC url cause the JDBC connection to fail for an unknown reason. As a workaround, using instead the container ip address is working.
        with:
          arguments: integrationTestJdbc -Dscalardb.jdbc.url=jdbc:oracle:thin:@${{ env.oracle_db_ip }}:1521/XEPDB1 -Dscalardb.jdbc.username=SYSTEM -Dscalardb.jdbc.password=Oracle

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_oracle_18_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-oracle-23-integration-test:
    runs-on: ubuntu-latest

    services:
      oracle:
        image: ghcr.io/scalar-labs/oracle/db-prebuilt:23.2.0-free
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
        ports:
          - 1521:1521
        options: >-
          --health-cmd "/opt/oracle/checkDBStatus.sh"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 120
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Retrieve then store the oracle container ip address in an environment variable.
        run: |
          echo "oracle_db_ip=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}'  $(docker ps -aq))" >> $GITHUB_ENV

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        #       Addressing the Oracle container with "@localhost" in the JDBC url cause the JDBC connection to fail for an unknown reason. As a workaround, using instead the container ip address is working.
        with:
          arguments: integrationTestJdbc -Dscalardb.jdbc.url=jdbc:oracle:thin:@${{ env.oracle_db_ip }}:1521/FREEPDB1 -Dscalardb.jdbc.username=SYSTEM -Dscalardb.jdbc.password=Oracle

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_oracle_23_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-sqlserver-2017-integration-test:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2017-latest
        env:
          MSSQL_PID: "Express"
          SA_PASSWORD: "SqlServer17"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestJdbc -Dscalardb.jdbc.url=jdbc:sqlserver://localhost:1433;encrypt=true;trustServerCertificate=true -Dscalardb.jdbc.username=sa -Dscalardb.jdbc.password=SqlServer17

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_sqlserver_2017_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-sqlserver-2022-integration-test:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          MSSQL_PID: "Express"
          SA_PASSWORD: "SqlServer22"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestJdbc -Dscalardb.jdbc.url=jdbc:sqlserver://localhost:1433;encrypt=true;trustServerCertificate=true -Dscalardb.jdbc.username=sa -Dscalardb.jdbc.password=SqlServer22

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_sqlserver_2022_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc

  jdbc-mariadb-10-integration-test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10
        env:
          MYSQL_ROOT_PASSWORD: mysql
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup and execute Gradle 'integrationTestJdbc' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: integrationTestJdbc -Dscalardb.jdbc.mariadb=true

      - name: Upload Gradle test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jdbc_mariadb_10_integration_test_reports
          path: core/build/reports/tests/integrationTestJdbc
