plugins {
    id 'application'
}

dependencies {
    implementation project(':core')
    implementation group: 'com.graphql-java', name: 'graphql-java', version: "${graphqlJavaVersion}"
    implementation group: 'com.google.guava', name: 'guava', version: "${guavaVersion}"
    implementation group: 'com.google.code.gson', name: 'gson', version: "${gsonVersion}"
    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4jVersion}"
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4jVersion}"
    implementation group: 'info.picocli', name: 'picocli', version: "${picoCliVersion}"
    implementation group: 'org.eclipse.jetty', name: 'jetty-servlet', version: "${jettyVersion}"
    testImplementation group: 'junit', name: 'junit', version: "${junitVersion}"
    testImplementation group: 'org.assertj', name: 'assertj-core', version: "${assertjVersion}"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: "${mockitoVersion}"
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: "${mockitoVersion}"
}

application {
    mainClassName = 'com.scalar.db.graphql.server.GraphQlServer'
    startScripts.applicationName = 'scalardb-graphql-server'
}

archivesBaseName = "scalardb-graphql"

// for release
distZip {
    archiveFileName = "${archivesBaseName}-${project.version}.zip"
}

// for docker
distTar {
    archiveFileName = "${project.name}.tar"
}
