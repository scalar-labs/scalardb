plugins {
    id "com.diffplug.spotless" version "6.13.0"
    id "org.jreleaser" version "1.19.0"
}

ext {
    projectGroup = 'com.scalar-labs'
    projectVersion = '3.13.5-SNAPSHOT'
}

group = projectGroup
version = projectVersion

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
//    apply plugin: 'jacoco'
    apply plugin: 'java-library-distribution'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'com.scalar.db.jdk-configuration'

    project.version = projectVersion

    ext {
        guiceVersion = '5.1.0'
        guavaVersion = '32.1.3-jre'
        slf4jVersion = '1.7.36'
        cassandraDriverVersion = '3.11.5'
        azureCosmosVersion = '4.67.0'
        jooqVersion = '3.14.16'
        awssdkVersion = '2.26.5'
        commonsDbcp2Version = '2.12.0'
        mysqlDriverVersion = '8.4.0'
        postgresqlDriverVersion = '42.7.3'
        oracleDriverVersion = '21.14.0.0'
        sqlserverDriverVersion = '11.2.3.jre8'
        sqliteDriverVersion = '3.46.0.0'
        yugabyteDriverVersion = '42.3.5-yb-5'
        grpcVersion = '1.67.1'
        protobufVersion = '3.25.5'
        annotationVersion = '1.3.2'
        picocliVersion = '4.7.6'
        scalarAdminVersion = '2.2.1'
        dropwizardMetricsVersion = '4.2.26'
        prometheusVersion = '0.16.0'
        commonsTextVersion = '1.12.0'
        jettyVersion = '9.4.54.v20240208'
        junitVersion = '5.10.3'
        commonsLangVersion = '3.14.0'
        assertjVersion = '3.26.0'
        mockitoVersion = '4.11.0'
        spotbugsVersion = '4.8.6'
        errorproneVersion = '2.10.0'
        errorproneJavacVersion = '9+181-r4173-1'
        gsonVersion = '2.11.0'
        log4jVersion = '2.23.1'
        stefanbirknerSystemLambdaVersion = '1.2.1'
        spotbugsPluginVersion = '5.2.5'
        errorpronePluginVersion = '3.1.0'
        protobufPluginVersion = '0.8.19'
        shadowPluginVersion = '7.1.2'
        // Make JDK11+ use the same version as JDK8 uses
        googleJavaFormatVersion = '1.7'
        commonsIoVersion = '2.16.1'
        lombokVersion = '1.18.34'
    }

    repositories {
        mavenCentral()
    }

    tasks.withType(Test) {
        useJUnitPlatform()
        testLogging.showStandardStreams = true
    }

    group = projectGroup

    java {
        withJavadocJar()
        withSourcesJar()
    }

    javadoc {
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    distZip {
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
    }

    distTar {
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
    }

    installDist {
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
    }
}

jreleaser {
    gitRootSearch = true

    signing {
        active = 'ALWAYS'
        armored = true
    }

    deploy {
        maven {
            def stagingRepositories = ['core/build/staging-deploy',
                                       'integration-test/build/staging-deploy',
                                       'schema-loader/build/staging-deploy',
                                       'server/build/staging-deploy',
                                       'rpc/build/staging-deploy']
            mavenCentral {
                sonatype {
                    active = 'RELEASE'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepositories.each { stagingRepository(it) }
                }
            }
            nexus2 {
                'snapshot-deploy' {
                    active = 'SNAPSHOT'
                    snapshotUrl = 'https://central.sonatype.com/repository/maven-snapshots/'
                    applyMavenCentralRules = true
                    snapshotSupported = true
                    closeRepository = true
                    releaseRepository = true
                    stagingRepositories.each { stagingRepository(it) }
                }
            }
        }
    }
}
