plugins {
    id 'application'
    id 'com.palantir.docker' version '0.25.0'
}

sourceSets {
    integrationTestScalarDbServer {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestScalarDbServerImplementation.extendsFrom testImplementation
    integrationTestScalarDbServerRuntimeOnly.extendsFrom testRuntimeOnly
}

def protobufVersion = '3.17.2'

dependencies {
    implementation project(':core')
    implementation project(':rpc')
    implementation group: 'com.google.guava', name: 'guava', version: '24.1-jre'
    implementation group: 'com.google.inject', name: 'guice', version: '5.0.1'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'
    implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: "${protobufVersion}"
    implementation group: 'info.picocli', name: 'picocli', version: '4.1.4'
    implementation(group: 'com.scalar-labs', name: 'scalar-admin', version: '1.0.0') {
        exclude group: 'io.grpc'
    }
    implementation group: 'io.dropwizard.metrics', name: 'metrics-core', version: '4.2.2'
    implementation group: 'io.dropwizard.metrics', name: 'metrics-jmx', version: '4.2.2'
    implementation group: 'io.prometheus', name: 'simpleclient_dropwizard', version: '0.11.0'
    implementation group: 'io.prometheus', name: 'simpleclient_servlet', version: '0.11.0'
    implementation group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.43.v20210629'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.9.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.16.0'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '2.16.0'
    integrationTestScalarDbServerImplementation project(':core').sourceSets.integrationTest.output
}

application {
    mainClassName = 'com.scalar.db.server.ScalarDbServer'
    startScripts.applicationName = 'scalardb-server'
}

docker {
    name "ghcr.io/scalar-labs/scalardb-server:${project.version}"
    files tasks.distTar.outputs, 'conf/log4j.properties'
}

task integrationTestScalarDbServer(type: Test) {
    description = 'Runs the integration tests for the Scalar DB server.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTestScalarDbServer.output.classesDirs
    classpath = sourceSets.integrationTestScalarDbServer.runtimeClasspath
    outputs.upToDateWhen { false }  // ensures integration tests are run every time when called
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        importOrder()
        removeUnusedImports()
        googleJavaFormat()
    }
}

archivesBaseName = "scalardb-server"

// for release
distZip {
    archiveFileName = "${archivesBaseName}-${project.version}.zip"
}

// for docker
distTar {
    archiveFileName = "${project.name}.tar"
}

// for archiving and uploading to maven central
if (!project.gradle.startParameter.taskNames.isEmpty() &&
        project.gradle.startParameter.taskNames[0].endsWith('publish')) {
    apply from: 'archive.gradle'
}
