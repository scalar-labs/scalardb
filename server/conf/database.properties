# Transaction manager implementation. The default is `consensus-commit`.
scalar.db.transaction_manager=${env:SCALAR_DB_TRANSACTION_MANAGER:-}

# Storage implementation used for Consensus Commit. The default is `cassandra`.
scalar.db.storage=${env:SCALAR_DB_STORAGE:-}

# Comma-separated contact points.
scalar.db.contact_points=${env:SCALAR_DB_CONTACT_POINTS:-}

# Port number for all the contact points.
scalar.db.contact_port=${env:SCALAR_DB_CONTACT_PORT:-}

# Credential information to access the database.
scalar.db.username=${env:SCALAR_DB_USERNAME:-}
scalar.db.password=${env:SCALAR_DB_PASSWORD:-}

# Isolation level used for Consensus Commit. Either `SNAPSHOT` or `SERIALIZABLE` can be specified. The default is `SNAPSHOT`.
scalar.db.consensus_commit.isolation_level=${env:SCALAR_DB_CONSENSUSCOMMIT_ISOLATION_LEVEL:-}

# For backward compatibility
scalar.db.isolation_level=${env:SCALAR_DB_ISOLATION_LEVEL:-}

# Serializable strategy used for Consensus Commit.
# Either `EXTRA_READ` or `EXTRA_WRITE` can be specified. The default is `EXTRA_READ`.
# If `SNAPSHOT` is specified in the property `scalar.db.consensus_commit.isolation_level`, this is ignored.
scalar.db.consensus_commit.serializable_strategy=${env:SCALAR_DB_CONSENSUSCOMMIT_SERIALIZABLE_STRATEGY:-}

# Port number of ScalarDB Server. The default is `60051`.
scalar.db.server.port=${env:SCALAR_DB_SERVER_PORT:-}
